{
  "paragraphs": [
    {
      "text": "%md\nHortonworks Blog - Predicting Airline Delays\nThis notebook is based on Blog posts below, by Ofer Mendelevitch \nhttp://hortonworks.com/blog/data-science-apacheh-hadoop-predicting-airline-delays/ \nhttp://hortonworks.com/blog/data-science-hadoop-spark-scala-part-2/\n",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 12:23:56.729",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eHortonworks Blog - Predicting Airline Delays\u003cbr/\u003eThis notebook is based on Blog posts below, by Ofer Mendelevitch\u003cbr/\u003e\u003ca href\u003d\"http://hortonworks.com/blog/data-science-apacheh-hadoop-predicting-airline-delays/\"\u003ehttp://hortonworks.com/blog/data-science-apacheh-hadoop-predicting-airline-delays/\u003c/a\u003e\u003cbr/\u003e\u003ca href\u003d\"http://hortonworks.com/blog/data-science-hadoop-spark-scala-part-2/\"\u003ehttp://hortonworks.com/blog/data-science-hadoop-spark-scala-part-2/\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587039802779_1094579905",
      "id": "20200416-122322_245296189",
      "dateCreated": "2020-04-16 12:23:22.779",
      "dateStarted": "2020-04-16 12:23:56.720",
      "dateFinished": "2020-04-16 12:23:56.726",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nDownload data sets",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 12:24:07.609",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eDownload data sets\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587039836710_400045853",
      "id": "20200416-122356_1742803364",
      "dateCreated": "2020-04-16 12:23:56.710",
      "dateStarted": "2020-04-16 12:24:07.618",
      "dateFinished": "2020-04-16 12:24:07.624",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\n\nwget http://stat-computing.org/dataexpo/2009/2007.csv.bz2 -O /tmp/flights_2007.csv.bz2\nwget http://stat-computing.org/dataexpo/2009/2008.csv.bz2 -O /tmp/flights_2008.csv.bz2\nwget ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/by_year/2007.csv.gz -O /tmp/weather_2007.csv.gz\nwget ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/by_year/2008.csv.gz -O /tmp/weather_2008.csv.gz\necho \"downloaded\"",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 12:24:18.849",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/sh"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "--2020-04-16 12:24:18--  http://stat-computing.org/dataexpo/2009/2007.csv.bz2\nResolving stat-computing.org (stat-computing.org)... 52.218.225.58\nConnecting to stat-computing.org (stat-computing.org)|52.218.225.58|:80... connected.\nHTTP request sent, awaiting response... 404 Not Found\n2020-04-16 12:24:18 ERROR 404: Not Found.\n\n--2020-04-16 12:24:18--  http://stat-computing.org/dataexpo/2009/2008.csv.bz2\nResolving stat-computing.org (stat-computing.org)... 52.218.225.58\nConnecting to stat-computing.org (stat-computing.org)|52.218.225.58|:80... connected.\nHTTP request sent, awaiting response... 404 Not Found\n2020-04-16 12:24:19 ERROR 404: Not Found.\n\n--2020-04-16 12:24:19--  ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/by_year/2007.csv.gz\n           \u003d\u003e ‘/tmp/weather_2007.csv.gz’\nResolving ftp.ncdc.noaa.gov (ftp.ncdc.noaa.gov)... 205.167.25.101, 2610:20:8040:2::101\nConnecting to ftp.ncdc.noaa.gov (ftp.ncdc.noaa.gov)|205.167.25.101|:21... connected.\nLogging in as anonymous ... Logged in!\n\u003d\u003d\u003e SYST ... done.    \u003d\u003d\u003e PWD ... done.\n\u003d\u003d\u003e TYPE I ... done.  \u003d\u003d\u003e CWD (1) /pub/data/ghcn/daily/by_year ... done.\n\u003d\u003d\u003e SIZE 2007.csv.gz ... 215136890\n\u003d\u003d\u003e PASV ... done.    \u003d\u003d\u003e RETR 2007.csv.gz ... done.\nLength: 215136890 (205M) (unauthoritative)\n\n     0K .......... .......... .......... .......... ..........  0%  242K 14m29s\n    50K .......... .......... .......... .......... ..........  0%  286K 13m22s\n   100K .......... .......... .......... .......... ..........  0%  286K 12m59s\n   150K .......... .......... .......... .......... ..........  0%  570K 11m16s\n   200K .......... .......... .......... .......... ..........  0%  175M 9m1s\n   250K .......... .......... .......... .......... ..........  0%  287K 9m33s\n   300K .......... .......... .......... .......... ..........  0% 65.5M 8m11s\n   350K .......... .......... .......... .......... ..........  0%  573K 7m56s\n   400K .......... .......... .......... .......... ..........  0%  208M 7m3s\n   450K .......... .......... .......... .......... ..........  0%  573K 6m57s\n   500K .......... .......... .......... .......... ..........  0%  221M 6m19s\n   550K .......... .......... .......... .......... ..........  0%  572K 6m18s\n   600K .......... .......... .......... .......... ..........  0%  251M 5m49s\n   650K .......... .......... .......... .......... ..........  0%  574K 5m50s\n   700K .......... .......... .......... .......... ..........  0%  101M 5m27s\n   750K .......... .......... .......... .......... ..........  0% 1.25M 5m16s\n   800K .......... .......... .......... .......... ..........  0% 1.02M 5m9s\n   850K .......... .......... .......... .......... ..........  0% 64.7M 4m52s\n   900K .......... .......... .......... .......... ..........  0% 1.26M 4m45s\n   950K .......... .......... .......... .......... ..........  0% 1.02M 4m41s\n  1000K .......... .......... .......... .......... ..........  0% 81.3M 4m28s\n  1050K .......... .......... .......... .......... ..........  0%  133M 4m16s\n  1100K .......... .......... .......... .......... ..........  0%  580K 4m20s\n  1150K .......... .......... .......... .......... ..........  0% 83.8M 4m9s\n  1200K .......... .......... .......... .......... ..........  0% 89.8M 3m59s\n  1250K .......... .......... .......... .......... ..........  0% 1.26M 3m56s\n  1300K .......... .......... .......... .......... ..........  0% 1.02M 3m55s\n  1350K .......... .......... .......... .......... ..........  0% 46.5M 3m47s\n  1400K .......... .......... .......... .......... ..........  0%  267M 3m39s\n  1450K .......... .......... .......... .......... ..........  0%  289M 3m31s\n  1500K .......... .......... .......... .......... ..........  0%  585K 3m36s\n  1550K .......... .......... .......... .......... ..........  0% 63.1M 3m29s\n  1600K .......... .......... .......... .......... ..........  0% 99.7M 3m23s\n  1650K .......... .......... .......... .......... ..........  0% 67.7M 3m17s\n  1700K .......... .......... .......... .......... ..........  0% 1.30M 3m16s\n  1750K .......... .......... .......... .......... ..........  0% 1.01M 3m16s\n  1800K .......... .......... .......... .......... ..........  0% 80.3M 3m11s\n  1850K .......... .......... .......... .......... ..........  0% 97.1M 3m6s\n  1900K .......... .......... .......... .......... ..........  0% 84.5M 3m1s\n  1950K .......... .......... .......... .......... ..........  0%  113M 2m56s\n  2000K .......... .......... .......... .......... ..........  0%  586K 3m1s\n  2050K .......... .......... .......... .......... ..........  0% 92.4M 2m56s\n  2100K .......... .......... .......... .......... ..........  1%  124M 2m52s\n  2150K .......... .......... .......... .......... ..........  1% 73.7M 2m48s\n  2200K .......... .......... .......... .......... ..........  1% 84.9M 2m45s\n  2250K .......... .......... .......... .......... ..........  1%  125M 2m41s\n  2300K .......... .......... .......... .......... ..........  1%  590K 2m45s\n  2350K .......... .......... .......... .......... ..........  1%  118M 2m42s\n  2400K .......... .......... .......... .......... ..........  1%  101M 2m38s\n  2450K .......... .......... .......... .......... ..........  1%  110M 2m35s\n  2500K .......... .......... .......... .......... ..........  1%  114M 2m32s\n  2550K .......... .......... .......... .......... ..........  1%  109M 2m29s\n  2600K .......... .......... .......... .......... ..........  1% 84.3M 2m27s\n  2650K .......... .......... .......... .......... ..........  1%  595K 2m30s\n  2700K .......... .......... .......... .......... ..........  1% 45.8M 2m28s\n  2750K .......... .......... .......... .......... ..........  1% 91.9M 2m25s\n  2800K .......... .......... .......... .......... ..........  1% 90.0M 2m22s\n  2850K .......... .......... .......... .......... ..........  1% 90.3M 2m20s\n  2900K .......... .......... .......... .......... ..........  1% 77.5M 2m18s\n  2950K .......... .......... .......... .......... ..........  1% 91.5M 2m15s\n  3000K .......... .......... .......... .......... ..........  1%  170M 2m13s\n  3050K .......... .......... .......... .......... ..........  1% 1.35M 2m13s\n  3100K .......... .......... .......... .......... ..........  1% 1.02M 2m14s\n  3150K .......... .......... .......... .......... ..........  1% 87.3M 2m12s\n  3200K .......... .......... .......... .......... ..........  1%  104M 2m10s\n  3250K .......... .......... .......... .......... ..........  1% 66.7M 2m8s\n  3300K .......... .......... .......... .......... ..........  1% 26.5M 2m6s\n  3350K .......... .......... .......... .......... ..........  1% 72.4M 2m4s\n  3400K .......... .......... .......... .......... ..........  1% 85.7M 2m3s\n  3450K .......... .......... .......... .......... ..........  1%  139M 2m1s\n  3500K .......... .......... .......... .......... ..........  1% 1.43M 2m1s\n  3550K .......... .......... .......... .......... ..........  1% 1.02M 2m2s\n  3600K .......... .......... .......... .......... ..........  1% 99.9M 2m1s\n  3650K .......... .......... .......... .......... ..........  1%  102M 1m59s\n  3700K .......... .......... .......... .......... ..........  1% 93.1M 1m57s\n  3750K .......... .......... .......... .......... ..........  1%  110M 1m56s\n  3800K .......... .......... .......... .......... ..........  1% 45.2M 1m54s\n  3850K .......... .......... .......... .......... ..........  1% 60.1M 1m53s\n  3900K .......... .......... .......... .......... ..........  1% 77.4M 1m51s\n  3950K .......... .......... .......... .......... ..........  1% 68.3M 1m50s\n  4000K .......... .......... .......... .......... ..........  1% 97.0M 1m49s\n  4050K .......... .......... .......... .......... ..........  1% 1.45M 1m49s\n  4100K .......... .......... .......... .......... ..........  1% 1.01M 1m50s\n  4150K .......... .......... .......... .......... ..........  1%  183M 1m49s\n  4200K .......... .......... .......... .......... ..........  2%  110M 1m47s\n  4250K .......... .......... .......... .......... ..........  2%  109M 1m46s\n  4300K .......... .......... .......... .......... ..........  2% 98.7M 1m45s\n  4350K .......... .......... .......... .......... ..........  2% 79.5M 1m44s\n  4400K .......... .......... .......... .......... ..........  2%  107M 1m43s\n  4450K .......... .......... .......... .......... ..........  2% 73.3M 1m42s\n  4500K .......... .......... .......... .......... ..........  2%  131M 1m40s\n  4550K .......... .......... .......... .......... ..........  2% 59.7M 99s\n  4600K .......... .......... .......... .......... ..........  2%  140M 98s\n  4650K .......... .......... .......... .......... ..........  2%  117M 97s\n  4700K .......... .......... .......... .......... ..........  2% 1.47M 98s\n  4750K .......... .......... .......... .......... ..........  2% 72.3M 97s\n  4800K .......... .......... .......... .......... ..........  2% 1.02M 98s\n  4850K .......... .......... .......... .......... ..........  2%  130M 97s\n  4900K .......... .......... .......... .......... ..........  2% 76.8M 96s\n  4950K .......... .......... .......... .......... ..........  2%  143M 95s\n  5000K .......... .......... .......... .......... ..........  2%  137M 94s\n  5050K .......... .......... .......... .......... ..........  2% 93.7M 93s\n  5100K .......... .......... .......... .......... ..........  2%  118M 92s\n  5150K .......... .......... .......... .......... ..........  2%  112M 91s\n  5200K .......... .......... .......... .......... ..........  2%  124M 90s\n  5250K .......... .......... .......... .......... ..........  2% 74.6M 89s\n  5300K .......... .......... .......... .......... ..........  2%  110M 88s\n  5350K .......... .......... .......... .......... ..........  2% 82.0M 88s\n  5400K .......... .......... .......... .......... ..........  2%  148M 87s\n  5450K .......... .......... .......... .......... ..........  2%  112M 86s\n  5500K .......... .......... .......... .......... ..........  2% 87.1M 85s\n  5550K .......... .......... .......... .......... ..........  2% 1.48M 86s\n  5600K .......... .......... .......... .......... ..........  2% 1.31M 86s\n  5650K .......... .......... .......... .......... ..........  2% 4.38M 86s\n  5700K .......... .......... .......... .......... ..........  2%  119M 85s\n  5750K .......... .......... .......... .......... ..........  2% 79.7M 84s\n  5800K .......... .......... .......... .......... ..........  2%  103M 84s\n  5850K .......... .......... .......... .......... ..........  2% 53.4M 83s\n  5900K .......... .......... .......... .......... ..........  2% 91.4M 82s\n  5950K .......... .......... .......... .......... ..........  2%  103M 82s\n  6000K .......... .......... .......... .......... ..........  2%  104M 81s\n  6050K .......... .......... .......... .......... ..........  2%  105M 80s\n  6100K .......... .......... .......... .......... ..........  2% 87.4M 80s\n  6150K .......... .......... .......... .......... ..........  2%  108M 79s\n  6200K .......... .......... .......... .......... ..........  2%  111M 78s\n  6250K .......... .......... .......... .......... ..........  2% 66.8M 78s\n  6300K .......... .......... .......... .......... ..........  3% 91.9M 77s\n  6350K .......... .......... .......... .......... ..........  3%  298M 76s\n  6400K .......... .......... .......... .......... ..........  3%  258M 76s\n  6450K .......... .......... .......... .......... ..........  3% 1.58M 76s\n  6500K .......... .......... .......... .......... ..........  3% 77.2M 76s\n  6550K .......... .......... .......... .......... ..........  3% 81.8M 75s\n  6600K .......... .......... .......... .......... ..........  3% 1.03M 76s\n  6650K .......... .......... .......... .......... ..........  3% 95.8M 75s\n  6700K .......... .......... .......... .......... ..........  3% 92.8M 75s\n  6750K .......... .......... .......... .......... ..........  3%  111M 74s\n  6800K .......... .......... .......... .......... ..........  3% 95.3M 74s\n  6850K .......... .......... .......... .......... ..........  3% 99.4M 73s\n  6900K .......... .......... .......... .......... ..........  3% 99.1M 73s\n  6950K .......... .......... .......... .......... ..........  3% 82.3M 72s\n  7000K .......... .......... .......... .......... ..........  3% 60.9M 72s\n  7050K .......... .......... .......... .......... ..........  3%  111M 71s\n  7100K .......... .......... .......... .......... ..........  3%  114M 71s\n  7150K .......... .......... .......... .......... ..........  3%  114M 70s\n  7200K .......... .......... .......... .......... ..........  3%  107M 70s\n  7250K .......... .......... .......... .......... ..........  3%  101M 69s\n  7300K .......... .......... .......... .......... ..........  3% 95.2M 69s\n  7350K .......... .......... .......... .......... ..........  3%  154M 68s\n  7400K .......... .......... .......... .......... ..........  3%  112M 68s\n  7450K .......... .......... .......... .......... ..........  3%  125M 67s\n  7500K .......... .......... .......... .......... ..........  3% 1.61M 68s\n  7550K .......... .......... .......... .......... ..........  3% 88.8M 67s\n  7600K .......... .......... .......... .......... ..........  3% 99.0M 67s\n  7650K .......... .......... .......... .......... ..........  3% 1.02M 68s\n  7700K .......... .......... .......... .......... ..........  3%  121M 67s\n  7750K .......... .......... .......... .......... ..........  3% 82.5M 67s\n  7800K .......... .......... .......... .......... ..........  3%  184M 66s\n  7850K .......... .......... .......... .......... ..........  3%  101M 66s\n  7900K .......... .......... .......... .......... ..........  3%  110M 65s\n  7950K .......... .......... .......... .......... ..........  3% 99.5M 65s\n  8000K .......... .......... .......... .......... ..........  3%  113M 65s\n  8050K .......... .......... .......... .......... ..........  3%  107M 64s\n  8100K .......... .......... .......... .......... ..........  3% 93.3M 64s\n  8150K .......... .......... .......... .......... ..........  3% 94.5M 63s\n  8200K .......... .......... .......... .......... ..........  3% 81.3M 63s\n  8250K .......... .......... .......... .......... ..........  3% 96.7M 63s\n  8300K .......... .......... .......... .......... ..........  3% 85.3M 62s\n  8350K .......... .......... .......... .......... ..........  3%  111M 62s\n  8400K .......... .......... .......... .......... ..........  4%  122M 61s\n  8450K .......... .......... .......... .......... ..........  4%  134M 61s\n  8500K .......... .......... .......... .......... ..........  4%  129M 61s\n  8550K .......... .......... .......... .......... ..........  4%  138M 60s\n  8600K .......... .......... .......... .......... ..........  4%  122M 60s\n  8650K .......... .......... .......... .......... ..........  4%  138M 60s\n  8700K .......... .......... .......... .......... ..........  4%  143M 59s\n  8750K .......... .......... .......... .......... ..........  4% 1.66M 60s\n  8800K .......... .......... .......... .......... ..........  4%  104M 59s\n  8850K .......... .......... .......... .......... ..........  4%  105M 59s\n  8900K .......... .......... .......... .......... ..........  4% 1.03M 60s\n  8950K .......... .......... .......... .......... ..........  4%  129M 59s\n  9000K .......... .......... .......... .......... ..........  4%  102M 59s\n  9050K .......... .......... .......... .......... ..........  4%  102M 59s\n  9100K .......... .......... .......... .......... ..........  4%  105M 58s\n  9150K .......... .......... .......... .......... ..........  4%  117M 58s\n  9200K .......... .......... .......... .......... ..........  4%  110M 58s\n  9250K .......... .......... .......... .......... ..........  4% 93.0M 57s\n  9300K .......... .......... .......... .......... ..........  4% 98.2M 57s\n  9350K .......... .......... .......... .......... ..........  4%  146M 57s\n  9400K .......... .......... .......... .......... ..........  4%  116M 56s\n  9450K .......... .......... .......... .......... ..........  4%  103M 56s\n  9500K .......... .......... .......... .......... ..........  4%  110M 56s\n  9550K .......... .......... .......... .......... ..........  4%  131M 56s\n  9600K .......... .......... .......... .......... ..........  4%  115M 55s\n  9650K .......... .......... .......... .......... ..........  4%  108M 55s\n  9700K .......... .......... .......... .......... ..........  4%  116M 55s\n  9750K .......... .......... .......... .......... ..........  4%  110M 54s\n  9800K .......... .......... .......... .......... ..........  4%  102M 54s\n  9850K .......... .......... .......... .......... ..........  4% 86.6M 54s\n  9900K .......... .......... .......... .......... ..........  4% 64.7M 54s\n  9950K .......... .......... .......... .......... ..........  4%  147M 53s\n 10000K .......... .......... .......... .......... ..........  4%  163M 53s\n 10050K .......... .......... .......... .......... ..........  4%  146M 53s\n 10100K .......... .......... .......... .......... ..........  4%  102M 53s\n 10150K .......... .......... .......... .......... ..........  4% 1.73M 53s\n 10200K .......... .......... .......... .......... ..........  4% 93.8M 53s\n 10250K .......... .......... .......... .......... ..........  4%  140M 52s\n 10300K .......... .......... .......... .......... ..........  4%  118M 52s\n 10350K .......... .......... .......... .......... ..........  4% 1.03M 53s\n 10400K .......... .......... .......... .......... ..........  4% 93.0M 52s\n 10450K .......... .......... .......... .......... ..........  4%  120M 52s\n 10500K .......... .......... .......... .......... ..........  5% 88.8M 52s\n 10550K .......... .......... .......... .......... ..........  5%  107M 52s\n 10600K .......... .......... .......... .......... ..........  5%  137M 51s\n 10650K .......... .......... .......... .......... ..........  5% 76.8M 51s\n 10700K .......... .......... .......... .......... ..........  5%  132M 51s\n 10750K .......... .......... .......... .......... ..........  5%  165M 51s\n 10800K .......... .......... .......... .......... ..........  5% 74.2M 50s\n 10850K .......... .......... .......... .......... ..........  5% 88.1M 50s\n 10900K .......... .......... .......... .......... ..........  5% 94.7M 50s\n 10950K .......... .......... .......... .......... ..........  5%  108M 50s\n 11000K .......... .......... .......... .......... ..........  5%  112M 50s\n 11050K .......... .......... .......... .......... ..........  5%  118M 49s\n 11100K .......... .......... .......... .......... ..........  5%  134M 49s\n 11150K .......... .......... .......... .......... ..........  5%  145M 49s\n 11200K .......... .......... .......... .......... ..........  5%  118M 49s\n 11250K .......... .......... .......... .......... ..........  5%  132M 48s\n 11300K .......... .......... .......... .......... ..........  5%  115M 48s\n 11350K .......... .......... .......... .......... ..........  5%  112M 48s\n 11400K .......... .......... .......... .......... ..........  5% 89.9M 48s\n 11450K .......... .......... .......... .......... ..........  5%  151M 48s\n 11500K .......... .......... .......... .......... ..........  5% 85.9M 47s\n 11550K .......... .......... .......... .......... ..........  5%  110M 47s\n 11600K .......... .......... .......... .......... ..........  5%  101M 47s\n 11650K .......... .......... .......... .......... ..........  5%  102M 47s\n 11700K .......... .......... .......... .......... ..........  5% 1.82M 47s\n 11750K .......... .......... .......... .......... ..........  5% 94.5M 47s\n 11800K .......... .......... .......... .......... ..........  5% 84.3M 47s\n 11850K .......... .......... .......... .......... ..........  5% 84.7M 46s\n 11900K .......... .......... .......... .......... ..........  5% 1.33M 47s\n 11950K .......... .......... .......... .......... ..........  5% 4.63M 47s\n 12000K .......... .......... .......... .......... ..........  5% 94.9M 47s\n 12050K .......... .......... .......... .......... ..........  5% 72.3M 46s\n 12100K .......... .......... .......... .......... ..........  5% 75.8M 46s\n 12150K .......... .......... .......... .......... ..........  5% 83.3M 46s\n 12200K .......... .......... .......... .......... ..........  5% 89.8M 46s\n 12250K .......... .......... .......... .......... ..........  5% 72.8M 46s\n 12300K .......... .......... .......... .......... ..........  5% 95.7M 45s\n 12350K .......... .......... .......... .......... ..........  5% 90.9M 45s\n 12400K .......... .......... .......... .......... ..........  5% 97.3M 45s\n 12450K .......... .......... .......... .......... ..........  5% 70.3M 45s\n 12500K .......... .......... .......... .......... ..........  5% 86.7M 45s\n 12550K .......... .......... .......... .......... ..........  5% 87.7M 44s\n 12600K .......... .......... .......... .......... ..........  6% 79.6M 44s\n 12650K .......... .......... .......... .......... ..........  6% 77.0M 44s\n 12700K .......... .......... .......... .......... ..........  6% 87.4M 44s\n 12750K .......... .......... .......... .......... ..........  6% 84.4M 44s\n 12800K .......... .......... .......... .......... ..........  6% 90.7M 44s\n 12850K .......... .......... .......... .......... ..........  6%  109M 43s\n 12900K .......... .......... .......... .......... ..........  6%  135M 43s\n 12950K .......... .......... .......... .......... ..........  6%  129M 43s\n 13000K .......... .......... .......... .......... ..........  6%  132M 43s\n 13050K .......... .......... .......... .......... ..........  6%  157M 43s\n 13100K .......... .......... .......... .......... ..........  6%  131M 43s\n 13150K .......... .......... .......... .......... ..........  6%  131M 42s\n 13200K .......... .......... .......... .......... ..........  6%  217M 42s\n 13250K .......... .......... .......... .......... ..........  6%  236M 42s\n 13300K .......... .......... .......... .......... ..........  6%  235M 42s\n 13350K .......... .......... .......... .......... ..........  6%  255M 42s\n 13400K .......... .......... .......... .......... ..........  6% 1.97M 42s\n 13450K .......... .......... .......... .......... ..........  6%  104M 42s\n 13500K .......... .......... .......... .......... ..........  6% 81.7M 42s\n 13550K .......... .......... .......... .......... ..........  6%  123M 41s\n 13600K .......... .......... .......... .......... ..........  6% 98.1M 41s\n 13650K .......... .......... .......... .......... ..........  6%  104M 41s\n 13700K .......... .......... .......... .......... ..........  6% 1.05M 42s\n 13750K .......... .......... .......... .......... ..........  6%  112M 42s\n 13800K .......... .......... .......... .......... ..........  6% 91.5M 41s\n 13850K .......... .......... .......... .......... ..........  6%  134M 41s\n 13900K .......... .......... .......... .......... ..........  6% 99.7M 41s\n 13950K .......... .......... .......... .......... ..........  6%  130M 41s\n 14000K .......... .......... .......... .......... ..........  6%  112M 41s\n 14050K .......... .......... .......... .......... ..........  6%  124M 41s\n 14100K .......... .......... .......... .......... ..........  6% 99.6M 40s\n 14150K .......... .......... .......... .......... ..........  6%  122M 40s\n 14200K .......... .......... .......... .......... ..........  6%  112M 40s\n 14250K .......... .......... .......... .......... ..........  6% 95.9M 40s\n 14300K .......... .......... .......... .......... ..........  6%  128M 40s\n 14350K .......... .......... .......... .......... ..........  6%  105M 40s\n 14400K .......... .......... .......... .......... ..........  6%  123M 40s\n 14450K .......... .......... .......... .......... ..........  6% 96.9M 39s\n 14500K .......... .......... .......... .......... ..........  6%  113M 39s\n 14550K .......... .......... .......... .......... ..........  6%  146M 39s\n 14600K .......... .......... .......... .......... ..........  6% 94.3M 39s\n 14650K .......... .......... .......... .......... ..........  6% 86.9M 39s\n 14700K .......... .......... .......... .......... ..........  7%  103M 39s\n 14750K .......... .......... .......... .......... ..........  7%  109M 39s\n 14800K .......... .......... .......... .......... ..........  7% 97.3M 38s\n 14850K .......... .......... .......... .......... ..........  7%  110M 38s\n 14900K .......... .......... .......... .......... ..........  7%  133M 38s\n 14950K .......... .......... .......... .......... ..........  7%  102M 38s\n 15000K .......... .......... .......... .......... ..........  7%  115M 38s\n 15050K .......... .......... .......... .......... ..........  7% 96.9M 38s\n 15100K .......... .......... .......... .......... ..........  7%  124M 38s\n 15150K .......... .......... .......... .......... ..........  7% 98.8M 38s\n 15200K .......... .......... .......... .......... ..........  7%  130M 37s\n 15250K .......... .......... .......... .......... ..........  7% 78.2M 37s\n 15300K .......... .......... .......... .......... ..........  7% 1.95M 38s\n 15350K .......... .......... .......... .......... ..........  7% 57.9M 37s\n 15400K .......... .......... .......... .......... ..........  7% 48.2M 37s\n 15450K .......... .......... .......... .......... ..........  7%  225M 37s\n 15500K .......... .......... .......... .......... ..........  7%  255M 37s\n 15550K .......... .......... .......... .......... ..........  7%  248M 37s\n 15600K .......... .......... .......... .......... ..........  7% 1.38M 37s\n 15650K .......... .......... .......... .......... ..........  7% 4.60M 37s\n 15700K .......... .......... .......... .......... ..........  7% 45.0M 37s\n 15750K .......... .......... .......... .......... ..........  7% 69.8M 37s\n 15800K .......... .......... .......... .......... ..........  7% 39.5M 37s\n 15850K .......... .......... .......... .......... ..........  7% 66.8M 37s\n 15900K .......... .......... .......... .......... ..........  7% 42.8M 37s\n 15950K .......... .......... .......... .......... ..........  7% 65.5M 37s\n 16000K .......... .......... .......... .......... ..........  7% 82.4M 36s\n 16050K .......... .......... .......... .......... ..........  7%  106M 36s\n 16100K .......... .......... .......... .......... ..........  7% 55.3M 36s\n 16150K .......... .......... .......... .......... ..........  7% 60.0M 36s\n 16200K .......... .......... .......... .......... ..........  7% 67.1M 36s\n 16250K .......... .......... .......... .......... ..........  7% 38.8M 36s\n 16300K .......... .......... .......... .......... ..........  7% 27.0M 36s\n 16350K .......... .......... .......... .......... ..........  7%  208M 36s\n 16400K .......... .......... .......... .......... ..........  7% 43.0M 36s\n 16450K .......... .......... .......... .......... ..........  7% 42.4M 35s\n 16500K .......... .......... .......... .......... ..........  7%  105M 35s\n 16550K .......... .......... .......... .......... ..........  7%  282M 35s\n 16600K .......... .......... .......... .......... ..........  7%  263M 35s\n 16650K .......... .......... .......... .......... ..........  7%  257M 35s\n 16700K .......... .......... .......... .......... ..........  7%  220M 35s\n 16750K .......... .......... .......... .......... ..........  7%  259M 35s\n 16800K .......... .......... .......... .......... ..........  8%  249M 35s\n 16850K .......... .......... .......... .......... ..........  8%  219M 35s\n 16900K .......... .......... .......... .......... ..........  8%  221M 34s\n 16950K .......... .......... .......... .......... ..........  8%  253M 34s\n 17000K .......... .......... .......... .......... ..........  8%  268M 34s\n 17050K .......... .......... .......... .......... ..........  8%  264M 34s\n 17100K .......... .......... .......... .......... ..........  8%  233M 34s\n 17150K .......... .......... .......... .......... ..........  8%  272M 34s\n 17200K .......... .......... .......... .......... ..........  8%  256M 34s\n 17250K .......... .......... .......... .......... ..........  8%  253M 34s\n 17300K .......... .......... .......... .......... ..........  8%  205M 34s\n 17350K .......... .......... .......... .......... ..........  8% 2.49M 34s\n 17400K .......... .......... .......... .......... ..........  8% 50.8M 34s\n 17450K .......... .......... .......... .......... ..........  8% 40.3M 34s\n 17500K .......... .......... .......... .......... ..........  8% 41.0M 33s\n 17550K .......... .......... .......... .......... ..........  8%  240M 33s\n 17600K .......... .......... .......... .......... ..........  8%  217M 33s\n 17650K .......... .......... .......... .......... ..........  8%  267M 33s\n 17700K .......... .......... .......... .......... ..........  8% 1.40M 33s\n 17750K .......... .......... .......... .......... ..........  8% 4.60M 33s\n 17800K .......... .......... .......... .......... ..........  8% 67.2M 33s\n 17850K .......... .......... .......... .......... ..........  8%  100M 33s\n 17900K .......... .......... .......... .......... ..........  8% 42.5M 33s\n 17950K .......... .......... .......... .......... ..........  8% 44.2M 33s\n 18000K .......... .......... .......... .......... ..........  8% 96.0M 33s\n 18050K .......... .......... .......... .......... ..........  8%  247M 33s\n 18100K .......... .......... .......... .......... ..........  8%  222M 33s\n 18150K .......... .......... .......... .......... ..........  8%  249M 33s\n 18200K .......... .......... .......... .......... ..........  8% 96.7M 33s\n 18250K .......... .......... .......... .......... ..........  8% 78.5M 32s\n 18300K .......... .......... .......... .......... ..........  8% 35.8M 32s\n 18350K .......... .......... .......... .......... ..........  8% 49.8M 32s\n 18400K .......... .......... .......... .......... ..........  8% 49.6M 32s\n 18450K .......... .......... .......... .......... ..........  8% 43.8M 32s\n 18500K .......... .......... .......... .......... ..........  8% 49.6M 32s\n 18550K .......... .......... .......... .......... ..........  8%  140M 32s\n 18600K .......... .......... .......... .......... ..........  8% 69.4M 32s\n 18650K .......... .......... .......... .......... ..........  8% 74.2M 32s\n 18700K .......... .......... .......... .......... ..........  8% 42.9M 32s\n 18750K .......... .......... .......... .......... ..........  8% 77.6M 32s\n 18800K .......... .......... .......... .......... ..........  8% 44.1M 32s\n 18850K .......... .......... .......... .......... ..........  8% 51.7M 31s\n 18900K .......... .......... .......... .......... ..........  9% 75.0M 31s\n 18950K .......... .......... .......... .......... ..........  9%  264M 31s\n 19000K .......... .......... .......... .......... ..........  9%  254M 31s\n 19050K .......... .......... .......... .......... ..........  9%  242M 31s\n 19100K .......... .......... .......... .......... ..........  9%  225M 31s\n 19150K .......... .......... .......... .......... ..........  9%  247M 31s\n 19200K .......... .......... .......... .......... ..........  9%  260M 31s\n 19250K .......... .......... .......... .......... ..........  9%  202M 31s\n 19300K .......... .......... .......... .......... ..........  9%  167M 31s\n 19350K .......... .......... .......... .......... ..........  9%  261M 31s\n 19400K .......... .......... .......... .......... ..........  9%  296M 31s\n 19450K .......... .......... .......... .......... ..........  9%  255M 30s\n 19500K .......... .......... .......... .......... ..........  9% 2.63M 31s\n 19550K .......... .......... .......... .......... ..........  9%  107M 30s\n 19600K .......... .......... .......... .......... ..........  9% 63.3M 30s\n 19650K .......... .......... .......... .......... ..........  9% 89.6M 30s\n 19700K .......... .......... .......... .......... ..........  9% 65.7M 30s\n 19750K .......... .......... .......... .......... ..........  9% 69.4M 30s\n 19800K .......... .......... .......... .......... ..........  9%  113M 30s\n 19850K .......... .......... .......... .......... ..........  9%  260M 30s\n 19900K .......... .......... .......... .......... ..........  9% 1.09M 30s\n 19950K .......... .......... .......... .......... ..........  9% 54.8M 30s\n 20000K .......... .......... .......... .......... ..........  9% 98.9M 30s\n 20050K .......... .......... .......... .......... ..........  9% 85.6M 30s\n 20100K .......... .......... .......... .......... ..........  9% 80.6M 30s\n 20150K .......... .......... .......... .......... ..........  9% 84.6M 30s\n 20200K .......... .......... .......... .......... ..........  9%  117M 30s\n 20250K .......... .......... .......... .......... ..........  9%  112M 30s\n 20300K .......... .......... .......... .......... ..........  9% 13.6M 30s\n 20350K .......... .......... .......... .......... ..........  9% 65.0M 30s\n 20400K .......... .......... .......... .......... ..........  9% 66.8M 30s\n 20450K .......... .......... .......... .......... ..........  9% 57.8M 29s\n 20500K .......... .......... .......... .......... ..........  9% 66.9M 29s\n 20550K .......... .......... .......... .......... ..........  9% 65.2M 29s\n 20600K .......... .......... .......... .......... ..........  9% 51.2M 29s\n 20650K .......... .......... .......... .......... ..........  9% 56.7M 29s\n 20700K .......... .......... .......... .......... ..........  9% 62.4M 29s\n 20750K .......... .......... .......... .......... ..........  9% 65.2M 29s\n 20800K .......... .......... .......... .......... ..........  9% 71.9M 29s\n 20850K .......... .......... .......... .......... ..........  9% 54.9M 29s\n 20900K .......... .......... .......... .......... ..........  9% 66.9M 29s\n 20950K .......... .......... .......... .......... ..........  9% 44.2M 29s\n 21000K .......... .......... .......... .......... .......... 10% 62.2M 29s\n 21050K .......... .......... .......... .......... .......... 10% 65.5M 29s\n 21100K .......... .......... .......... .......... .......... 10%  270M 29s\n 21150K .......... .......... .......... .......... .......... 10%  195M 29s\n 21200K .......... .......... .......... .......... .......... 10%  255M 28s\n 21250K .......... .......... .......... .......... .......... 10%  219M 28s\n 21300K .......... .......... .......... .......... .......... 10%  264M 28s\n 21350K .......... .......... .......... .......... .......... 10%  264M 28s\n 21400K .......... .......... .......... .......... .......... 10%  264M 28s\n 21450K .......... .......... .......... .......... .......... 10%  224M 28s\n 21500K .......... .......... .......... .......... .......... 10%  251M 28s\n 21550K .......... .......... .......... .......... .......... 10%  264M 28s\n 21600K .......... .......... .......... .......... .......... 10%  298M 28s\n 21650K .......... .......... .......... .......... .......... 10%  170M 28s\n 21700K .......... .......... .......... .......... .......... 10% 3.00M 28s\n 21750K .......... .......... .......... .......... .......... 10% 51.3M 28s\n 21800K .......... .......... .......... .......... .......... 10%  101M 28s\n 21850K .......... .......... .......... .......... .......... 10% 65.5M 28s\n 21900K .......... .......... .......... .......... .......... 10% 57.8M 28s\n 21950K .......... .......... .......... .......... .......... 10% 67.6M 28s\n 22000K .......... .......... .......... .......... .......... 10%  115M 27s\n 22050K .......... .......... .......... .......... .......... 10%  198M 27s\n 22100K .......... .......... .......... .......... .......... 10%  136M 27s\n 22150K .......... .......... .......... .......... .......... 10% 1.44M 28s\n 22200K .......... .......... .......... .......... .......... 10% 4.40M 28s\n 22250K .......... .......... .......... .......... .......... 10%  102M 28s\n 22300K .......... .......... .......... .......... .......... 10%  143M 27s\n 22350K .......... .......... .......... .......... .......... 10% 81.0M 27s\n 22400K .......... .......... .......... .......... .......... 10% 58.0M 27s\n 22450K .......... .......... .......... .......... .......... 10% 8.10M 27s\n 22500K .......... .......... .......... .......... .......... 10% 60.6M 27s\n 22550K .......... .......... .......... .......... .......... 10% 67.6M 27s\n 22600K .......... .......... .......... .......... .......... 10% 72.1M 27s\n 22650K .......... .......... .......... .......... .......... 10% 61.8M 27s\n 22700K .......... .......... .......... .......... .......... 10% 61.7M 27s\n 22750K .......... .......... .......... .......... .......... 10% 70.4M 27s\n 22800K .......... .......... .......... .......... .......... 10% 72.3M 27s\n 22850K .......... .......... .......... .......... .......... 10% 54.2M 27s\n 22900K .......... .......... .......... .......... .......... 10% 75.2M 27s\n 22950K .......... .......... .......... .......... .......... 10% 59.9M 27s\n 23000K .......... .......... .......... .......... .......... 10% 72.4M 27s\n 23050K .......... .......... .......... .......... .......... 10% 62.2M 27s\n 23100K .......... .......... .......... .......... .......... 11% 74.2M 27s\n 23150K .......... .......... .......... .......... .......... 11% 71.1M 26s\n 23200K .......... .......... .......... .......... .......... 11% 67.3M 26s\n 23250K .......... .......... .......... .......... .......... 11% 55.9M 26s\n 23300K .......... .......... .......... .......... .......... 11% 80.8M 26s\n 23350K .......... .......... .......... .......... .......... 11% 71.4M 26s\n 23400K .......... .......... .......... .......... .......... 11%  139M 26s\n 23450K .......... .......... .......... .......... .......... 11%  223M 26s\n 23500K .......... .......... .......... .......... .......... 11%  254M 26s\n 23550K .......... .......... .......... .......... .......... 11%  265M 26s\n 23600K .......... .......... .......... .......... .......... 11%  262M 26s\n 23650K .......... .......... .......... .......... .......... 11%  233M 26s\n 23700K .......... .......... .......... .......... .......... 11%  264M 26s\n 23750K .......... .......... .......... .......... .......... 11%  259M 26s\n 23800K .......... .......... .......... .......... .......... 11%  260M 26s\n 23850K .......... .......... .......... .......... .......... 11%  224M 26s\n 23900K .......... .......... .......... .......... .......... 11%  254M 26s\n 23950K .......... .......... .......... .......... .......... 11%  266M 26s\n 24000K .......... .......... .......... .......... .......... 11%  241M 25s\n 24050K .......... .......... .......... .......... .......... 11% 3.48M 26s\n 24100K .......... .......... .......... .......... .......... 11% 57.0M 25s\n 24150K .......... .......... .......... .......... .......... 11% 54.5M 25s\n 24200K .......... .......... .......... .......... .......... 11% 74.4M 25s\n 24250K .......... .......... .......... .......... .......... 11% 87.8M 25s\n 24300K .......... .......... .......... .......... .......... 11% 75.4M 25s\n 24350K .......... .......... .......... .......... .......... 11%  192M 25s\n 24400K .......... .......... .......... .......... .......... 11%  257M 25s\n 24450K .......... .......... .......... .......... .......... 11%  220M 25s\n 24500K .......... .......... .......... .......... .......... 11% 1.45M 25s\n 24550K .......... .......... .......... .......... .......... 11% 4.42M 25s\n 24600K .......... .......... .......... .......... .......... 11% 4.83M 25s\n 24650K .......... .......... .......... .......... .......... 11% 77.9M 25s\n 24700K .......... .......... .......... .......... .......... 11% 66.2M 25s\n 24750K .......... .......... .......... .......... .......... 11% 62.3M 25s\n 24800K .......... .......... .......... .......... .......... 11% 71.8M 25s\n 24850K .......... .......... .......... .......... .......... 11% 76.5M 25s\n 24900K .......... .......... .......... .......... .......... 11% 90.3M 25s\n 24950K .......... .......... .......... .......... .......... 11% 90.8M 25s\n 25000K .......... .......... .......... .......... .......... 11% 59.6M 25s\n 25050K .......... .......... .......... .......... .......... 11% 81.3M 25s\n 25100K .......... .......... .......... .......... .......... 11% 61.9M 25s\n 25150K .......... .......... .......... .......... .......... 11% 64.0M 25s\n 25200K .......... .......... .......... .......... .......... 12% 69.7M 25s\n 25250K .......... .......... .......... .......... .......... 12% 59.3M 25s\n 25300K .......... .......... .......... .......... .......... 12% 73.4M 25s\n 25350K .......... .......... .......... .......... .......... 12% 71.1M 25s\n 25400K .......... .......... .......... .......... .......... 12% 71.3M 24s\n 25450K .......... .......... .......... .......... .......... 12% 85.7M 24s\n 25500K .......... .......... .......... .......... .......... 12% 97.7M 24s\n 25550K .......... .......... .......... .......... .......... 12%  145M 24s\n 25600K .......... .......... .......... .......... .......... 12% 69.5M 24s\n 25650K .......... .......... .......... .......... .......... 12% 75.4M 24s\n 25700K .......... .......... .......... .......... .......... 12% 64.6M 24s\n 25750K .......... .......... .......... .......... .......... 12% 49.1M 24s\n 25800K .......... .......... .......... .......... .......... 12%  114M 24s\n 25850K .......... .......... .......... .......... .......... 12%  247M 24s\n 25900K .......... .......... .......... .......... .......... 12%  284M 24s\n 25950K .......... .......... .......... .......... .......... 12%  294M 24s\n 26000K .......... .......... .......... .......... .......... 12%  192M 24s\n 26050K .......... .......... .......... .......... .......... 12%  273M 24s\n 26100K .......... .......... .......... .......... .......... 12%  256M 24s\n 26150K .......... .......... .......... .......... .......... 12%  258M 24s\n 26200K .......... .......... .......... .......... .......... 12%  222M 24s\n 26250K .......... .......... .......... .......... .......... 12%  185M 24s\n 26300K .......... .......... .......... .......... .......... 12%  257M 24s\n 26350K .......... .......... .......... .......... .......... 12%  254M 24s\n 26400K .......... .......... .......... .......... .......... 12% 4.93M 24s\n 26450K .......... .......... .......... .......... .......... 12% 70.4M 24s\n 26500K .......... .......... .......... .......... .......... 12% 41.5M 23s\n 26550K .......... .......... .......... .......... .......... 12% 43.1M 23s\n 26600K .......... .......... .......... .......... .......... 12% 49.8M 23s\n 26650K .......... .......... .......... .......... .......... 12%  121M 23s\n 26700K .......... .......... .......... .......... .......... 12%  219M 23s\n 26750K .......... .......... .......... .......... .......... 12%  292M 23s\n 26800K .......... .......... .......... .......... .......... 12%  239M 23s\n 26850K .......... .......... .......... .......... .......... 12%  266M 23s\n 26900K .......... .......... .......... .......... .......... 12%  225M 23s\n 26950K .......... .......... .......... .......... .......... 12%  867K 23s\n 27000K .......... .......... .......... .......... .......... 12% 46.6M 23s\n 27050K .......... .......... .......... .......... .......... 12% 46.2M 23s\n 27100K .......... .......... .......... .......... .......... 12% 44.9M 23s\n 27150K .......... .......... .......... .......... .......... 12% 44.6M 23s\n 27200K .......... .......... .......... .......... .......... 12% 64.4M 23s\n 27250K .......... .......... .......... .......... .......... 12% 72.3M 23s\n 27300K .......... .......... .......... .......... .......... 13% 65.8M 23s\n 27350K .......... .......... .......... .......... .......... 13% 76.8M 23s\n 27400K .......... .......... .......... .......... .......... 13% 71.6M 23s\n 27450K .......... .......... .......... .......... .......... 13%  105M 23s\n 27500K .......... .......... .......... .......... .......... 13% 72.2M 23s\n 27550K .......... .......... .......... .......... .......... 13% 64.9M 23s\n 27600K .......... .......... .......... .......... .......... 13% 94.8M 23s\n 27650K .......... .......... .......... .......... .......... 13% 67.5M 23s\n 27700K .......... .......... .......... .......... .......... 13% 63.3M 23s\n 27750K .......... .......... .......... .......... .......... 13% 60.5M 23s\n 27800K .......... .......... .......... .......... .......... 13% 73.3M 23s\n 27850K .......... .......... .......... .......... .......... 13% 76.8M 23s\n 27900K .......... .......... .......... .......... .......... 13% 69.1M 23s\n 27950K .......... .......... .......... .......... .......... 13% 63.2M 23s\n 28000K .......... .......... .......... .......... .......... 13% 61.3M 23s\n 28050K .......... .......... .......... .......... .......... 13%  124M 22s\n 28100K .......... .......... .......... .......... .......... 13%  318M 22s\n 28150K .......... .......... .......... .......... .......... 13%  288M 22s\n 28200K .......... .......... .......... .......... .......... 13%  314M 22s\n 28250K .......... .......... .......... .......... .......... 13%  327M 22s\n 28300K .......... .......... .......... .......... .......... 13%  341M 22s\n 28350K .......... .......... .......... .......... .......... 13%  239M 22s\n 28400K .......... .......... .......... .......... .......... 13%  327M 22s\n 28450K .......... .......... .......... .......... .......... 13%  326M 22s\n 28500K .......... .......... .......... .......... .......... 13%  330M 22s\n 28550K .......... .......... .......... .......... .......... 13%  290M 22s\n 28600K .......... .......... .......... .......... .......... 13%  327M 22s\n 28650K .......... .......... .......... .......... .......... 13%  314M 22s\n 28700K .......... .......... .......... .......... .......... 13%  242M 22s\n 28750K .......... .......... .......... .......... .......... 13%  248M 22s\n 28800K .......... .......... .......... .......... .......... 13% 10.3M 22s\n 28850K .......... .......... .......... .......... .......... 13% 59.0M 22s\n 28900K .......... .......... .......... .......... .......... 13%  120M 22s\n 28950K .......... .......... .......... .......... .......... 13% 90.9M 22s\n 29000K .......... .......... .......... .......... .......... 13% 62.4M 22s\n 29050K .......... .......... .......... .......... .......... 13%  110M 22s\n 29100K .......... .......... .......... .......... .......... 13%  113M 22s\n 29150K .......... .......... .......... .......... .......... 13% 83.8M 22s\n 29200K .......... .......... .......... .......... .......... 13%  124M 22s\n 29250K .......... .......... .......... .......... .......... 13%  801K 22s\n 29300K .......... .......... .......... .......... .......... 13% 81.3M 22s\n 29350K .......... .......... .......... .......... .......... 13%  125M 22s\n 29400K .......... .......... .......... .......... .......... 14% 91.2M 22s\n 29450K .......... .......... .......... .......... .......... 14%  142M 22s\n 29500K .......... .......... .......... .......... .......... 14%  122M 22s\n 29550K .......... .......... .......... .......... .......... 14%  109M 22s\n 29600K .......... .......... .......... .......... .......... 14%  128M 22s\n 29650K .......... .......... .......... .......... .......... 14%  113M 22s\n 29700K .......... .......... .......... .......... .......... 14% 82.6M 22s\n 29750K .......... .......... .......... .......... .......... 14%  117M 21s\n 29800K .......... .......... .......... .......... .......... 14%  166M 21s\n 29850K .......... .......... .......... .......... .......... 14% 94.7M 21s\n 29900K .......... .......... .......... .......... .......... 14%  108M 21s\n 29950K .......... .......... .......... .......... .......... 14%  118M 21s\n 30000K .......... .......... .......... .......... .......... 14% 78.6M 21s\n 30050K .......... .......... .......... .......... .......... 14%  113M 21s\n 30100K .......... .......... .......... .......... .......... 14%  109M 21s\n 30150K .......... .......... .......... .......... .......... 14%  119M 21s\n 30200K .......... .......... .......... .......... .......... 14%  136M 21s\n 30250K .......... .......... .......... .......... .......... 14%  115M 21s\n 30300K .......... .......... .......... .......... .......... 14% 72.8M 21s\n 30350K .......... .......... .......... .......... .......... 14%  124M 21s\n 30400K .......... .......... .......... .......... .......... 14% 94.3M 21s\n 30450K .......... .......... .......... .......... .......... 14%  121M 21s\n 30500K .......... .......... .......... .......... .......... 14%  111M 21s\n 30550K .......... .......... .......... .......... .......... 14% 98.9M 21s\n 30600K .......... .......... .......... .......... .......... 14% 51.3M 21s\n 30650K .......... .......... .......... .......... .......... 14%  131M 21s\n 30700K .......... .......... .......... .......... .......... 14%  137M 21s\n 30750K .......... .......... .......... .......... .......... 14%  143M 21s\n 30800K .......... .......... .......... .......... .......... 14%  118M 21s\n 30850K .......... .......... .......... .......... .......... 14%  152M 21s\n 30900K .......... .......... .......... .......... .......... 14%  143M 21s\n 30950K .......... .......... .......... .......... .......... 14%  111M 21s\n 31000K .......... .......... .......... .......... .......... 14%  114M 21s\n 31050K .......... .......... .......... .......... .......... 14% 99.1M 21s\n 31100K .......... .......... .......... .......... .......... 14%  137M 20s\n 31150K .......... .......... .......... .......... .......... 14%  106M 20s\n 31200K .......... .......... .......... .......... .......... 14% 97.1M 20s\n 31250K .......... .......... .......... .......... .......... 14% 16.6M 20s\n 31300K .......... .......... .......... .......... .......... 14%  127M 20s\n 31350K .......... .......... .......... .......... .......... 14% 87.7M 20s\n 31400K .......... .......... .......... .......... .......... 14%  126M 20s\n 31450K .......... .......... .......... .......... .......... 14% 67.6M 20s\n 31500K .......... .......... .......... .......... .......... 15% 66.3M 20s\n 31550K .......... .......... .......... .......... .......... 15% 75.2M 20s\n 31600K .......... .......... .......... .......... .......... 15%  104M 20s\n 31650K .......... .......... .......... .......... .......... 15% 71.2M 20s\n 31700K .......... .......... .......... .......... .......... 15%  247M 20s\n 31750K .......... .......... .......... .......... .......... 15%  729K 20s\n 31800K .......... .......... .......... .......... .......... 15%  129M 20s\n 31850K .......... .......... .......... .......... .......... 15%  178M 20s\n 31900K .......... .......... .......... .......... .......... 15%  133M 20s\n 31950K .......... .......... .......... .......... .......... 15%  170M 20s\n 32000K .......... .......... .......... .......... .......... 15%  183M 20s\n 32050K .......... .......... .......... .......... .......... 15%  144M 20s\n 32100K .......... .......... .......... .......... .......... 15%  213M 20s\n 32150K .......... .......... .......... .......... .......... 15%  125M 20s\n 32200K .......... .......... .......... .......... .......... 15%  130M 20s\n 32250K .......... .......... .......... .......... .......... 15%  130M 20s\n 32300K .......... .......... .......... .......... .......... 15%  149M 20s\n 32350K .......... .......... .......... .......... .......... 15%  221M 20s\n 32400K .......... .......... .......... .......... .......... 15%  111M 20s\n 32450K .......... .......... .......... .......... .......... 15%  137M 20s\n 32500K .......... .......... .......... .......... .......... 15%  124M 20s\n 32550K .......... .......... .......... .......... .......... 15% 79.8M 20s\n 32600K .......... .......... .......... .......... .......... 15% 94.3M 20s\n 32650K .......... .......... .......... .......... .......... 15% 88.0M 20s\n 32700K .......... .......... .......... .......... .......... 15%  250M 20s\n 32750K .......... .......... .......... .......... .......... 15% 72.1M 20s\n 32800K .......... .......... .......... .......... .......... 15% 92.8M 20s\n 32850K .......... .......... .......... .......... .......... 15% 97.3M 20s\n 32900K .......... .......... .......... .......... .......... 15% 95.5M 20s\n 32950K .......... .......... .......... .......... .......... 15% 89.5M 20s\n 33000K .......... .......... .......... .......... .......... 15%  115M 20s\n 33050K .......... .......... .......... .......... .......... 15%  127M 20s\n 33100K .......... .......... .......... .......... .......... 15%  193M 19s\n 33150K .......... .......... .......... .......... .......... 15% 99.2M 19s\n 33200K .......... .......... .......... .......... .......... 15%  120M 19s\n 33250K .......... .......... .......... .......... .......... 15%  128M 19s\n 33300K .......... .......... .......... .......... .......... 15%  104M 19s\n 33350K .......... .......... .......... .......... .......... 15%  154M 19s\n 33400K .......... .......... .......... .......... .......... 15%  128M 19s\n 33450K .......... .......... .......... .......... .......... 15% 87.2M 19s\n 33500K .......... .......... .......... .......... .......... 15%  133M 19s\n 33550K .......... .......... .......... .......... .......... 15%  126M 19s\n 33600K .......... .......... .......... .......... .......... 16% 91.8M 19s\n 33650K .......... .......... .......... .......... .......... 16%  105M 19s\n 33700K .......... .......... .......... .......... .......... 16%  136M 19s\n 33750K .......... .......... .......... .......... .......... 16%  124M 19s\n 33800K .......... .......... .......... .......... .......... 16%  116M 19s\n 33850K .......... .......... .......... .......... .......... 16% 87.5M 19s\n 33900K .......... .......... .......... .......... .......... 16%  112M 19s\n 33950K .......... .......... .......... .......... .......... 16% 52.1M 19s\n 34000K .......... .......... .......... .......... .......... 16%  150M 19s\n 34050K .......... .......... .......... .......... .......... 16% 96.1M 19s\n 34100K .......... .......... .......... .......... .......... 16%  121M 19s\n 34150K .......... .......... .......... .......... .......... 16%  128M 19s\n 34200K .......... .......... .......... .......... .......... 16%  716K 19s\n 34250K .......... .......... .......... .......... .......... 16%  112M 19s\n 34300K .......... .......... .......... .......... .......... 16% 45.7M 19s\n 34350K .......... .......... .......... .......... .......... 16% 71.0M 19s\n 34400K .......... .......... .......... .......... .......... 16% 60.4M 19s\n 34450K .......... .......... .......... .......... .......... 16%  121M 19s\n 34500K .......... .......... .......... .......... .......... 16% 81.9M 19s\n 34550K .......... .......... .......... .......... .......... 16% 42.5M 19s\n 34600K .......... .......... .......... .......... .......... 16%  109M 19s\n 34650K .......... .......... .......... .......... .......... 16%  104M 19s\n 34700K .......... .......... .......... .......... .......... 16%  122M 19s\n 34750K .......... .......... .......... .......... .......... 16% 94.0M 19s\n 34800K .......... .......... .......... .......... .......... 16%  117M 19s\n 34850K .......... .......... .......... .......... .......... 16%  119M 19s\n 34900K .......... .......... .......... .......... .......... 16% 90.8M 19s\n 34950K .......... .......... .......... .......... .......... 16%  130M 19s\n 35000K .......... .......... .......... .......... .......... 16%  104M 19s\n 35050K .......... .......... .......... .......... .......... 16%  115M 19s\n 35100K .......... .......... .......... .......... .......... 16% 91.8M 19s\n 35150K .......... .......... .......... .......... .......... 16%  139M 19s\n 35200K .......... .......... .......... .......... .......... 16%  117M 19s\n 35250K .......... .......... .......... .......... .......... 16%  113M 19s\n 35300K .......... .......... .......... .......... .......... 16%  104M 18s\n 35350K .......... .......... .......... .......... .......... 16%  107M 18s\n 35400K .......... .......... .......... .......... .......... 16%  110M 18s\n 35450K .......... .......... .......... .......... .......... 16% 90.2M 18s\n 35500K .......... .......... .......... .......... .......... 16%  142M 18s\n 35550K .......... .......... .......... .......... .......... 16% 52.8M 18s\n 35600K .......... .......... .......... .......... .......... 16% 92.2M 18s\n 35650K .......... .......... .......... .......... .......... 16% 34.9M 18s\n 35700K .......... .......... .......... .......... .......... 17%  217M 18s\n 35750K .......... .......... .......... .......... .......... 17%  278M 18s\n 35800K .......... .......... .......... .......... .......... 17%  149M 18s\n 35850K .......... .......... .......... .......... .......... 17%  104M 18s\n 35900K .......... .......... .......... .......... .......... 17% 89.5M 18s\n 35950K .......... .......... .......... .......... .......... 17%  144M 18s\n 36000K .......... .......... .......... .......... .......... 17%  173M 18s\n 36050K .......... .......... .......... .......... .......... 17%  138M 18s\n 36100K .......... .......... .......... .......... .......... 17%  139M 18s\n 36150K .......... .......... .......... .......... .......... 17%  116M 18s\n 36200K .......... .......... .......... .......... .......... 17% 98.3M 18s\n 36250K .......... .......... .......... .......... .......... 17% 70.6M 18s\n 36300K .......... .......... .......... .......... .......... 17%  104M 18s\n 36350K .......... .......... .......... .......... .......... 17%  132M 18s\n 36400K .......... .......... .......... .......... .......... 17% 83.4M 18s\n 36450K .......... .......... .......... .......... .......... 17%  137M 18s\n 36500K .......... .......... .......... .......... .......... 17% 92.3M 18s\n 36550K .......... .......... .......... .......... .......... 17%  132M 18s\n 36600K .......... .......... .......... .......... .......... 17%  103M 18s\n 36650K .......... .......... .......... .......... .......... 17%  127M 18s\n 36700K .......... .......... .......... .......... .......... 17% 90.5M 18s\n 36750K .......... .......... .......... .......... .......... 17%  805K 18s\n 36800K .......... .......... .......... .......... .......... 17% 92.8M 18s\n 36850K .......... .......... .......... .......... .......... 17% 55.3M 18s\n 36900K .......... .......... .......... .......... .......... 17%  110M 18s\n 36950K .......... .......... .......... .......... .......... 17%  137M 18s\n 37000K .......... .......... .......... .......... .......... 17% 51.2M 18s\n 37050K .......... .......... .......... .......... .......... 17% 99.4M 18s\n 37100K .......... .......... .......... .......... .......... 17% 7.14M 18s\n 37150K .......... .......... .......... .......... .......... 17%  103M 18s\n 37200K .......... .......... .......... .......... .......... 17%  121M 18s\n 37250K .......... .......... .......... .......... .......... 17%  100M 18s\n 37300K .......... .......... .......... .......... .......... 17%  113M 18s\n 37350K .......... .......... .......... .......... .......... 17% 98.8M 18s\n 37400K .......... .......... .......... .......... .......... 17% 96.6M 18s\n 37450K .......... .......... .......... .......... .......... 17% 79.2M 18s\n 37500K .......... .......... .......... .......... .......... 17%  111M 18s\n 37550K .......... .......... .......... .......... .......... 17%  104M 18s\n 37600K .......... .......... .......... .......... .......... 17% 85.4M 18s\n 37650K .......... .......... .......... .......... .......... 17%  155M 18s\n 37700K .......... .......... .......... .......... .......... 17% 92.4M 18s\n 37750K .......... .......... .......... .......... .......... 17%  107M 17s\n 37800K .......... .......... .......... .......... .......... 18% 55.6M 17s\n 37850K .......... .......... .......... .......... .......... 18% 67.4M 17s\n 37900K .......... .......... .......... .......... .......... 18% 87.1M 17s\n 37950K .......... .......... .......... .......... .......... 18%  117M 17s\n 38000K .......... .......... .......... .......... .......... 18%  103M 17s\n 38050K .......... .......... .......... .......... .......... 18% 90.4M 17s\n 38100K .......... .......... .......... .......... .......... 18% 95.1M 17s\n 38150K .......... .......... .......... .......... .......... 18% 83.9M 17s\n 38200K .......... .......... .......... .......... .......... 18% 54.2M 17s\n 38250K .......... .......... .......... .......... .......... 18% 93.1M 17s\n 38300K .......... .......... .......... .......... .......... 18% 86.0M 17s\n 38350K .......... .......... .......... .......... .......... 18% 71.1M 17s\n 38400K .......... .......... .......... .......... .......... 18% 74.0M 17s\n 38450K .......... .......... .......... .......... .......... 18% 75.7M 17s\n 38500K .......... .......... .......... .......... .......... 18% 70.6M 17s\n 38550K .......... .......... .......... .......... .......... 18% 86.2M 17s\n 38600K .......... .......... .......... .......... .......... 18% 63.8M 17s\n 38650K .......... .......... .......... .......... .......... 18% 55.7M 17s\n 38700K .......... .......... .......... .......... .......... 18% 53.5M 17s\n 38750K .......... .......... .......... .......... .......... 18% 68.8M 17s\n 38800K .......... .......... .......... .......... .......... 18% 78.5M 17s\n 38850K .......... .......... .......... .......... .......... 18% 99.1M 17s\n 38900K .......... .......... .......... .......... .......... 18%  225M 17s\n 38950K .......... .......... .......... .......... .......... 18%  244M 17s\n 39000K .......... .......... .......... .......... .......... 18%  220M 17s\n 39050K .......... .......... .......... .......... .......... 18%  253M 17s\n 39100K .......... .......... .......... .......... .......... 18%  249M 17s\n 39150K .......... .......... .......... .......... .......... 18%  255M 17s\n 39200K .......... .......... .......... .......... .......... 18%  214M 17s\n 39250K .......... .......... .......... .......... .......... 18%  258M 17s\n 39300K .......... .......... .......... .......... .......... 18%  263M 17s\n 39350K .......... .......... .......... .......... .......... 18%  912K 17s\n 39400K .......... .......... .......... .......... .......... 18% 84.5M 17s\n 39450K .......... .......... .......... .......... .......... 18%  125M 17s\n 39500K .......... .......... .......... .......... .......... 18% 91.7M 17s\n 39550K .......... .......... .......... .......... .......... 18% 73.3M 17s\n 39600K .......... .......... .......... .......... .......... 18%  140M 17s\n 39650K .......... .......... .......... .......... .......... 18% 3.65M 17s\n 39700K .......... .......... .......... .......... .......... 18%  110M 17s\n 39750K .......... .......... .......... .......... .......... 18%  140M 17s\n 39800K .......... .......... .......... .......... .......... 18% 17.6M 17s\n 39850K .......... .......... .......... .......... .......... 18%  135M 17s\n 39900K .......... .......... .......... .......... .......... 19% 92.3M 17s\n 39950K .......... .......... .......... .......... .......... 19% 93.8M 17s\n 40000K .......... .......... .......... .......... .......... 19%  125M 17s\n 40050K .......... .......... .......... .......... .......... 19%  129M 17s\n 40100K .......... .......... .......... .......... .......... 19% 89.3M 17s\n 40150K .......... .......... .......... .......... .......... 19%  108M 17s\n 40200K .......... .......... .......... .......... .......... 19%  124M 17s\n 40250K .......... .......... .......... .......... .......... 19%  110M 17s\n 40300K .......... .......... .......... .......... .......... 19%  118M 17s\n 40350K .......... .......... .......... .......... .......... 19% 86.1M 17s\n 40400K .......... .......... .......... .......... .......... 19% 77.4M 16s\n 40450K .......... .......... .......... .......... .......... 19% 69.4M 16s\n 40500K .......... .......... .......... .......... .......... 19% 85.9M 16s\n 40550K .......... .......... .......... .......... .......... 19% 67.5M 16s\n 40600K .......... .......... .......... .......... .......... 19% 83.2M 16s\n 40650K .......... .......... .......... .......... .......... 19% 93.7M 16s\n 40700K .......... .......... .......... .......... .......... 19% 68.3M 16s\n 40750K .......... .......... .......... .......... .......... 19% 80.3M 16s\n 40800K .......... .......... .......... .......... .......... 19% 60.8M 16s\n 40850K .......... .......... .......... .......... .......... 19% 73.7M 16s\n 40900K .......... .......... .......... .......... .......... 19% 92.4M 16s\n 40950K .......... .......... .......... .......... .......... 19% 99.3M 16s\n 41000K .......... .......... .......... .......... .......... 19% 63.3M 16s\n 41050K .......... .......... .......... .......... .......... 19% 89.1M 16s\n 41100K .......... .......... .......... .......... .......... 19% 80.8M 16s\n 41150K .......... .......... .......... .......... .......... 19%  127M 16s\n 41200K .......... .......... .......... .......... .......... 19% 99.6M 16s\n 41250K .......... .......... .......... .......... .......... 19% 83.4M 16s\n 41300K .......... .......... .......... .......... .......... 19% 91.9M 16s\n 41350K .......... .......... .......... .......... .......... 19%  105M 16s\n 41400K .......... .......... .......... .......... .......... 19%  142M 16s\n 41450K .......... .......... .......... .......... .......... 19% 92.4M 16s\n 41500K .......... .......... .......... .......... .......... 19%  104M 16s\n 41550K .......... .......... .......... .......... .......... 19% 86.8M 16s\n 41600K .......... .......... .......... .......... .......... 19% 75.4M 16s\n 41650K .......... .......... .......... .......... .......... 19%  192M 16s\n 41700K .......... .......... .......... .......... .......... 19%  251M 16s\n 41750K .......... .......... .......... .......... .......... 19%  268M 16s\n 41800K .......... .......... .......... .......... .......... 19%  214M 16s\n 41850K .......... .......... .......... .......... .......... 19%  277M 16s\n 41900K .......... .......... .......... .......... .......... 19%  259M 16s\n 41950K .......... .......... .......... .......... .......... 19%  250M 16s\n 42000K .......... .......... .......... .......... .......... 20% 1.04M 16s\n 42050K .......... .......... .......... .......... .......... 20% 78.8M 16s\n 42100K .......... .......... .......... .......... .......... 20% 68.5M 16s\n 42150K .......... .......... .......... .......... .......... 20% 77.5M 16s\n 42200K .......... .......... .......... .......... .......... 20%  232M 16s\n 42250K .......... .......... .......... .......... .......... 20% 2.22M 16s\n 42300K .......... .......... .......... .......... .......... 20% 72.6M 16s\n 42350K .......... .......... .......... .......... .......... 20% 74.7M 16s\n 42400K .......... .......... .......... .......... .......... 20% 60.2M 16s\n 42450K .......... .......... .......... .......... .......... 20% 74.1M 16s\n 42500K .......... .......... .......... .......... .......... 20% 93.1M 16s\n 42550K .......... .......... .......... .......... .......... 20% 86.1M 16s\n 42600K .......... .......... .......... .......... .......... 20% 73.8M 16s\n 42650K .......... .......... .......... .......... .......... 20% 74.8M 16s\n 42700K .......... .......... .......... .......... .......... 20% 82.0M 16s\n 42750K .......... .......... .......... .......... .......... 20% 99.3M 16s\n 42800K .......... .......... .......... .......... .......... 20% 93.6M 16s\n 42850K .......... .......... .......... .......... .......... 20% 83.8M 16s\n 42900K .......... .......... .......... .......... .......... 20% 83.1M 16s\n 42950K .......... .......... .......... .......... .......... 20% 78.8M 16s\n 43000K .......... .......... .......... .......... .......... 20% 79.4M 16s\n 43050K .......... .......... .......... .......... .......... 20% 93.8M 16s\n 43100K .......... .......... .......... .......... .......... 20% 92.4M 16s\n 43150K .......... .......... .......... .......... .......... 20% 85.1M 16s\n 43200K .......... .......... .......... .......... .......... 20% 74.1M 16s\n 43250K .......... .......... .......... .......... .......... 20% 78.1M 16s\n 43300K .......... .......... .......... .......... .......... 20% 81.7M 15s\n 43350K .......... .......... .......... .......... .......... 20% 94.0M 15s\n 43400K .......... .......... .......... .......... .......... 20% 81.2M 15s\n 43450K .......... .......... .......... .......... .......... 20%  128M 15s\n 43500K .......... .......... .......... .......... .......... 20%  123M 15s\n 43550K .......... .......... .......... .......... .......... 20%  158M 15s\n 43600K .......... .......... .......... .......... .......... 20% 98.9M 15s\n 43650K .......... .......... .......... .......... .......... 20%  252M 15s\n 43700K .......... .......... .......... .......... .......... 20% 80.5M 15s\n 43750K .......... .......... .......... .......... .......... 20% 73.2M 15s\n 43800K .......... .......... .......... .......... .......... 20% 59.1M 15s\n 43850K .......... .......... .......... .......... .......... 20%  118M 15s\n 43900K .......... .......... .......... .......... .......... 20% 71.7M 15s\n 43950K .......... .......... .......... .......... .......... 20% 79.7M 15s\n 44000K .......... .......... .......... .......... .......... 20%  213M 15s\n 44050K .......... .......... .......... .......... .......... 20%  146M 15s\n 44100K .......... .......... .......... .......... .......... 21%  161M 15s\n 44150K .......... .......... .......... .......... .......... 21%  252M 15s\n 44200K .......... .......... .......... .......... .......... 21% 84.7M 15s\n 44250K .......... .......... .......... .......... .......... 21%  267M 15s\n 44300K .......... .......... .......... .......... .......... 21% 94.2M 15s\n 44350K .......... .......... .......... .......... .......... 21% 83.6M 15s\n 44400K .......... .......... .......... .......... .......... 21% 74.8M 15s\n 44450K .......... .......... .......... .......... .......... 21%  117M 15s\n 44500K .......... .......... .......... .......... .......... 21%  252M 15s\n 44550K .......... .......... .......... .......... .......... 21%  213M 15s\n 44600K .......... .......... .......... .......... .......... 21%  242M 15s\n 44650K .......... .......... .......... .......... .......... 21%  253M 15s\n 44700K .......... .......... .......... .......... .......... 21% 1.24M 15s\n 44750K .......... .......... .......... .......... .......... 21% 63.6M 15s\n 44800K .......... .......... .......... .......... .......... 21% 91.2M 15s\n 44850K .......... .......... .......... .......... .......... 21%  188M 15s\n 44900K .......... .......... .......... .......... .......... 21% 1.73M 15s\n 44950K .......... .......... .......... .......... .......... 21% 57.2M 15s\n 45000K .......... .......... .......... .......... .......... 21% 80.9M 15s\n 45050K .......... .......... .......... .......... .......... 21% 68.2M 15s\n 45100K .......... .......... .......... .......... .......... 21%  113M 15s\n 45150K .......... .......... .......... .......... .......... 21% 61.5M 15s\n 45200K .......... .......... .......... .......... .......... 21%  120M 15s\n 45250K .......... .......... .......... .......... .......... 21%  148M 15s\n 45300K .......... .......... .......... .......... .......... 21%  120M 15s\n 45350K .......... .......... .......... .......... .......... 21%  115M 15s\n 45400K .......... .......... .......... .......... .......... 21% 74.6M 15s\n 45450K .......... .......... .......... .......... .......... 21% 99.5M 15s\n 45500K .......... .......... .......... .......... .......... 21% 74.5M 15s\n 45550K .......... .......... .......... .......... .......... 21% 85.9M 15s\n 45600K .......... .......... .......... .......... .......... 21% 89.5M 15s\n 45650K .......... .......... .......... .......... .......... 21%  109M 15s\n 45700K .......... .......... .......... .......... .......... 21% 97.0M 15s\n 45750K .......... .......... .......... .......... .......... 21% 83.0M 15s\n 45800K .......... .......... .......... .......... .......... 21%  151M 15s\n 45850K .......... .......... .......... .......... .......... 21%  188M 15s\n 45900K .......... .......... .......... .......... .......... 21%  250M 15s\n 45950K .......... .......... .......... .......... .......... 21%  290M 15s\n 46000K .......... .......... .......... .......... .......... 21%  125M 15s\n 46050K .......... .......... .......... .......... .......... 21%  118M 15s\n 46100K .......... .......... .......... .......... .......... 21%  135M 15s\n 46150K .......... .......... .......... .......... .......... 21% 88.6M 15s\n 46200K .......... .......... .......... .......... .......... 22%  176M 15s\n 46250K .......... .......... .......... .......... .......... 22%  331M 15s\n 46300K .......... .......... .......... .......... .......... 22% 79.5M 15s\n 46350K .......... .......... .......... .......... .......... 22%  133M 15s\n 46400K .......... .......... .......... .......... .......... 22%  123M 15s\n 46450K .......... .......... .......... .......... .......... 22% 89.4M 15s\n 46500K .......... .......... .......... .......... .......... 22%  153M 14s\n 46550K .......... .......... .......... .......... .......... 22% 77.2M 14s\n 46600K .......... .......... .......... .......... .......... 22%  101M 14s\n 46650K .......... .......... .......... .......... .......... 22%  159M 14s\n 46700K .......... .......... .......... .......... .......... 22%  114M 14s\n 46750K .......... .......... .......... .......... .......... 22% 96.5M 14s\n 46800K .......... .......... .......... .......... .......... 22% 70.3M 14s\n 46850K .......... .......... .......... .......... .......... 22% 84.4M 14s\n 46900K .......... .......... .......... .......... .......... 22%  101M 14s\n 46950K .......... .......... .......... .......... .......... 22% 99.9M 14s\n 47000K .......... .......... .......... .......... .......... 22%  103M 14s\n 47050K .......... .......... .......... .......... .......... 22%  106M 14s\n 47100K .......... .......... .......... .......... .......... 22%  130M 14s\n 47150K .......... .......... .......... .......... .......... 22%  267M 14s\n 47200K .......... .......... .......... .......... .......... 22%  716K 14s\n 47250K .......... .......... .......... .......... .......... 22%  103M 14s\n 47300K .......... .......... .......... .......... .......... 22% 49.0M 14s\n 47350K .......... .......... .......... .......... .......... 22% 95.5M 14s\n 47400K .......... .......... .......... .......... .......... 22%  132M 14s\n 47450K .......... .......... .......... .......... .......... 22%  157M 14s\n 47500K .......... .......... .......... .......... .......... 22%  130M 14s\n 47550K .......... .......... .......... .......... .......... 22%  225M 14s\n 47600K .......... .......... .......... .......... .......... 22% 85.2M 14s\n 47650K .......... .......... .......... .......... .......... 22%  100M 14s\n 47700K .......... .......... .......... .......... .......... 22%  107M 14s\n 47750K .......... .......... .......... .......... .......... 22% 78.5M 14s\n 47800K .......... .......... .......... .......... .......... 22%  115M 14s\n 47850K .......... .......... .......... .......... .......... 22%  171M 14s\n 47900K .......... .......... .......... .......... .......... 22% 68.6M 14s\n 47950K .......... .......... .......... .......... .......... 22% 63.7M 14s\n 48000K .......... .......... .......... .......... .......... 22%  112M 14s\n 48050K .......... .......... .......... .......... .......... 22%  127M 14s\n 48100K .......... .......... .......... .......... .......... 22% 79.7M 14s\n 48150K .......... .......... .......... .......... .......... 22% 89.8M 14s\n 48200K .......... .......... .......... .......... .......... 22% 64.8M 14s\n 48250K .......... .......... .......... .......... .......... 22% 74.0M 14s\n 48300K .......... .......... .......... .......... .......... 23%  106M 14s\n 48350K .......... .......... .......... .......... .......... 23% 91.0M 14s\n 48400K .......... .......... .......... .......... .......... 23% 89.5M 14s\n 48450K .......... .......... .......... .......... .......... 23% 75.0M 14s\n 48500K .......... .......... .......... .......... .......... 23% 83.3M 14s\n 48550K .......... .......... .......... .......... .......... 23% 99.7M 14s\n 48600K .......... .......... .......... .......... .......... 23%  130M 14s\n 48650K .......... .......... .......... .......... .......... 23% 77.0M 14s\n 48700K .......... .......... .......... .......... .......... 23%  166M 14s\n 48750K .......... .......... .......... .......... .......... 23%  129M 14s\n 48800K .......... .......... .......... .......... .......... 23% 71.0M 14s\n 48850K .......... .......... .......... .......... .......... 23% 85.6M 14s\n 48900K .......... .......... .......... .......... .......... 23%  102M 14s\n 48950K .......... .......... .......... .......... .......... 23%  115M 14s\n 49000K .......... .......... .......... .......... .......... 23% 76.4M 14s\n 49050K .......... .......... .......... .......... .......... 23% 96.0M 14s\n 49100K .......... .......... .......... .......... .......... 23% 95.7M 14s\n 49150K .......... .......... .......... .......... .......... 23%  101M 14s\n 49200K .......... .......... .......... .......... .......... 23%  174M 14s\n 49250K .......... .......... .......... .......... .......... 23%  258M 14s\n 49300K .......... .......... .......... .......... .......... 23%  255M 14s\n 49350K .......... .......... .......... .......... .......... 23%  201M 14s\n 49400K .......... .......... .......... .......... .......... 23%  245M 14s\n 49450K .......... .......... .......... .......... .......... 23%  723K 14s\n 49500K .......... .......... .......... .......... .......... 23% 83.3M 14s\n 49550K .......... .......... .......... .......... .......... 23% 82.8M 14s\n 49600K .......... .......... .......... .......... .......... 23% 70.1M 14s\n 49650K .......... .......... .......... .......... .......... 23% 96.0M 14s\n 49700K .......... .......... .......... .......... .......... 23% 74.5M 14s\n 49750K .......... .......... .......... .......... .......... 23%  104M 14s\n 49800K .......... .......... .......... .......... .......... 23%  151M 14s\n 49850K .......... .......... .......... .......... .......... 23%  106M 14s\n 49900K .......... .......... .......... .......... .......... 23%  118M 14s\n 49950K .......... .......... .......... .......... .......... 23% 72.0M 14s\n 50000K .......... .......... .......... .......... .......... 23%  109M 14s\n 50050K .......... .......... .......... .......... .......... 23% 86.5M 14s\n 50100K .......... .......... .......... .......... .......... 23%  115M 14s\n 50150K .......... .......... .......... .......... .......... 23% 76.7M 14s\n 50200K .......... .......... .......... .......... .......... 23% 91.2M 14s\n 50250K .......... .......... .......... .......... .......... 23% 92.0M 14s\n 50300K .......... .......... .......... .......... .......... 23% 95.3M 14s\n 50350K .......... .......... .......... .......... .......... 23%  102M 14s\n 50400K .......... .......... .......... .......... .......... 24% 86.6M 14s\n 50450K .......... .......... .......... .......... .......... 24% 94.8M 14s\n 50500K .......... .......... .......... .......... .......... 24%  124M 14s\n 50550K .......... .......... .......... .......... .......... 24%  108M 14s\n 50600K .......... .......... .......... .......... .......... 24%  109M 14s\n 50650K .......... .......... .......... .......... .......... 24%  109M 14s\n 50700K .......... .......... .......... .......... .......... 24% 91.2M 14s\n 50750K .......... .......... .......... .......... .......... 24%  100M 13s\n 50800K .......... .......... .......... .......... .......... 24% 99.6M 13s\n 50850K .......... .......... .......... .......... .......... 24% 93.1M 13s\n 50900K .......... .......... .......... .......... .......... 24%  125M 13s\n 50950K .......... .......... .......... .......... .......... 24% 71.1M 13s\n 51000K .......... .......... .......... .......... .......... 24% 99.4M 13s\n 51050K .......... .......... .......... .......... .......... 24%  111M 13s\n 51100K .......... .......... .......... .......... .......... 24% 66.9M 13s\n 51150K .......... .......... .......... .......... .......... 24% 77.5M 13s\n 51200K .......... .......... .......... .......... .......... 24%  106M 13s\n 51250K .......... .......... .......... .......... .......... 24% 98.5M 13s\n 51300K .......... .......... .......... .......... .......... 24%  172M 13s\n 51350K .......... .......... .......... .......... .......... 24% 89.9M 13s\n 51400K .......... .......... .......... .......... .......... 24%  108M 13s\n 51450K .......... .......... .......... .......... .......... 24% 48.7M 13s\n 51500K .......... .......... .......... .......... .......... 24% 48.4M 13s\n 51550K .......... .......... .......... .......... .......... 24% 73.5M 13s\n 51600K .......... .......... .......... .......... .......... 24%  119M 13s\n 51650K .......... .......... .......... .......... .......... 24%  269M 13s\n 51700K .......... .......... .......... .......... .......... 24%  100M 13s\n 51750K .......... .......... .......... .......... .......... 24% 79.1M 13s\n 51800K .......... .......... .......... .......... .......... 24% 76.2M 13s\n 51850K .......... .......... .......... .......... .......... 24%  102M 13s\n 51900K .......... .......... .......... .......... .......... 24%  107M 13s\n 51950K .......... .......... .......... .......... .......... 24%  120M 13s\n 52000K .......... .......... .......... .......... .......... 24%  224M 13s\n 52050K .......... .......... .......... .......... .......... 24%  255M 13s\n 52100K .......... .......... .......... .......... .......... 24%  250M 13s\n 52150K .......... .......... .......... .......... .......... 24%  233M 13s\n 52200K .......... .......... .......... .......... .......... 24%  727K 13s\n 52250K .......... .......... .......... .......... .......... 24%  116M 13s\n 52300K .......... .......... .......... .......... .......... 24%  118M 13s\n 52350K .......... .......... .......... .......... .......... 24%  108M 13s\n 52400K .......... .......... .......... .......... .......... 24%  103M 13s\n 52450K .......... .......... .......... .......... .......... 24% 99.0M 13s\n 52500K .......... .......... .......... .......... .......... 25%  114M 13s\n 52550K .......... .......... .......... .......... .......... 25%  116M 13s\n 52600K .......... .......... .......... .......... .......... 25%  110M 13s\n 52650K .......... .......... .......... .......... .......... 25%  112M 13s\n 52700K .......... .......... .......... .......... .......... 25%  105M 13s\n 52750K .......... .......... .......... .......... .......... 25%  101M 13s\n 52800K .......... .......... .......... .......... .......... 25%  148M 13s\n 52850K .......... .......... .......... .......... .......... 25%  105M 13s\n 52900K .......... .......... .......... .......... .......... 25% 65.6M 13s\n 52950K .......... .......... .......... .......... .......... 25% 82.8M 13s\n 53000K .......... .......... .......... .......... .......... 25%  108M 13s\n 53050K .......... .......... .......... .......... .......... 25% 99.0M 13s\n 53100K .......... .......... .......... .......... .......... 25% 66.9M 13s\n 53150K .......... .......... .......... .......... .......... 25% 98.3M 13s\n 53200K .......... .......... .......... .......... .......... 25% 79.8M 13s\n 53250K .......... .......... .......... .......... .......... 25% 93.0M 13s\n 53300K .......... .......... .......... .......... .......... 25% 95.9M 13s\n 53350K .......... .......... .......... .......... .......... 25%  104M 13s\n 53400K .......... .......... .......... .......... .......... 25% 80.1M 13s\n 53450K .......... .......... .......... .......... .......... 25% 89.9M 13s\n 53500K .......... .......... .......... .......... .......... 25%  110M 13s\n 53550K .......... .......... .......... .......... .......... 25%  100M 13s\n 53600K .......... .......... .......... .......... .......... 25%  124M 13s\n 53650K .......... .......... .......... .......... .......... 25%  106M 13s\n 53700K .......... .......... .......... .......... .......... 25% 96.1M 13s\n 53750K .......... .......... .......... .......... .......... 25% 94.6M 13s\n 53800K .......... .......... .......... .......... .......... 25% 94.1M 13s\n 53850K .......... .......... .......... .......... .......... 25% 94.2M 13s\n 53900K .......... .......... .......... .......... .......... 25% 95.0M 13s\n 53950K .......... .......... .......... .......... .......... 25%  122M 13s\n 54000K .......... .......... .......... .......... .......... 25% 97.2M 13s\n 54050K .......... .......... .......... .......... .......... 25%  136M 13s\n 54100K .......... .......... .......... .......... .......... 25%  144M 13s\n 54150K .......... .......... .......... .......... .......... 25%  118M 13s\n 54200K .......... .......... .......... .......... .......... 25%  149M 13s\n 54250K .......... .......... .......... .......... .......... 25%  156M 13s\n 54300K .......... .......... .......... .......... .......... 25% 96.3M 13s\n 54350K .......... .......... .......... .......... .......... 25% 97.5M 13s\n 54400K .......... .......... .......... .......... .......... 25%  100M 13s\n 54450K .......... .......... .......... .......... .......... 25%  102M 13s\n 54500K .......... .......... .......... .......... .......... 25% 83.0M 13s\n 54550K .......... .......... .......... .......... .......... 25%  102M 13s\n 54600K .......... .......... .......... .......... .......... 26% 96.2M 13s\n 54650K .......... .......... .......... .......... .......... 26%  103M 13s\n 54700K .......... .......... .......... .......... .......... 26%  145M 13s\n 54750K .......... .......... .......... .......... .......... 26%  725K 13s\n 54800K .......... .......... .......... .......... .......... 26% 93.3M 13s\n 54850K .......... .......... .......... .......... .......... 26%  119M 13s\n 54900K .......... .......... .......... .......... .......... 26%  110M 13s\n 54950K .......... .......... .......... .......... .......... 26%  124M 13s\n 55000K .......... .......... .......... .......... .......... 26% 87.4M 13s\n 55050K .......... .......... .......... .......... .......... 26%  129M 13s\n 55100K .......... .......... .......... .......... .......... 26%  105M 13s\n 55150K .......... .......... .......... .......... .......... 26%  132M 13s\n 55200K .......... .......... .......... .......... .......... 26%  104M 13s\n 55250K .......... .......... .......... .......... .......... 26% 84.2M 13s\n 55300K .......... .......... .......... .......... .......... 26%  132M 13s\n 55350K .......... .......... .......... .......... .......... 26% 99.2M 13s\n 55400K .......... .......... .......... .......... .......... 26% 97.8M 13s\n 55450K .......... .......... .......... .......... .......... 26%  135M 12s\n 55500K .......... .......... .......... .......... .......... 26%  142M 12s\n 55550K .......... .......... .......... .......... .......... 26% 88.1M 12s\n 55600K .......... .......... .......... .......... .......... 26%  117M 12s\n 55650K .......... .......... .......... .......... .......... 26%  114M 12s\n 55700K .......... .......... .......... .......... .......... 26%  144M 12s\n 55750K .......... .......... .......... .......... .......... 26%  103M 12s\n 55800K .......... .......... .......... .......... .......... 26%  107M 12s\n 55850K .......... .......... .......... .......... .......... 26%  101M 12s\n 55900K .......... .......... .......... .......... .......... 26% 66.2M 12s\n 55950K .......... .......... .......... .......... .......... 26% 74.3M 12s\n 56000K .......... .......... .......... .......... .......... 26% 65.0M 12s\n 56050K .......... .......... .......... .......... .......... 26% 63.0M 12s\n 56100K .......... .......... .......... .......... .......... 26% 81.5M 12s\n 56150K .......... .......... .......... .......... .......... 26% 79.7M 12s\n 56200K .......... .......... .......... .......... .......... 26%  112M 12s\n 56250K .......... .......... .......... .......... .......... 26% 87.9M 12s\n 56300K .......... .......... .......... .......... .......... 26% 80.7M 12s\n 56350K .......... .......... .......... .......... .......... 26% 74.2M 12s\n 56400K .......... .......... .......... .......... .......... 26% 86.2M 12s\n 56450K .......... .......... .......... .......... .......... 26%  107M 12s\n 56500K .......... .......... .......... .......... .......... 26% 77.1M 12s\n 56550K .......... .......... .......... .......... .......... 26% 85.1M 12s\n 56600K .......... .......... .......... .......... .......... 26% 64.6M 12s\n 56650K .......... .......... .......... .......... .......... 26% 78.8M 12s\n 56700K .......... .......... .......... .......... .......... 27% 99.4M 12s\n 56750K .......... .......... .......... .......... .......... 27% 87.8M 12s\n 56800K .......... .......... .......... .......... .......... 27%  157M 12s\n 56850K .......... .......... .......... .......... .......... 27%  255M 12s\n 56900K .......... .......... .......... .......... .......... 27%  269M 12s\n 56950K .......... .......... .......... .......... .......... 27%  204M 12s\n 57000K .......... .......... .......... .......... .......... 27%  251M 12s\n 57050K .......... .......... .......... .......... .......... 27%  257M 12s\n 57100K .......... .......... .......... .......... .......... 27%  725K 12s\n 57150K .......... .......... .......... .......... .......... 27% 68.4M 12s\n 57200K .......... .......... .......... .......... .......... 27% 81.1M 12s\n 57250K .......... .......... .......... .......... .......... 27% 81.6M 12s\n 57300K .......... .......... .......... .......... .......... 27% 82.9M 12s\n 57350K .......... .......... .......... .......... .......... 27% 85.7M 12s\n 57400K .......... .......... .......... .......... .......... 27% 85.9M 12s\n 57450K .......... .......... .......... .......... .......... 27%  103M 12s\n 57500K .......... .......... .......... .......... .......... 27% 87.8M 12s\n 57550K .......... .......... .......... .......... .......... 27% 76.0M 12s\n 57600K .......... .......... .......... .......... .......... 27% 88.5M 12s\n 57650K .......... .......... .......... .......... .......... 27%  112M 12s\n 57700K .......... .......... .......... .......... .......... 27% 46.2M 12s\n 57750K .......... .......... .......... .......... .......... 27% 49.7M 12s\n 57800K .......... .......... .......... .......... .......... 27% 48.7M 12s\n 57850K .......... .......... .......... .......... .......... 27% 53.6M 12s\n 57900K .......... .......... .......... .......... .......... 27% 63.3M 12s\n 57950K .......... .......... .......... .......... .......... 27% 53.5M 12s\n 58000K .......... .......... .......... .......... .......... 27% 51.0M 12s\n 58050K .......... .......... .......... .......... .......... 27% 63.0M 12s\n 58100K .......... .......... .......... .......... .......... 27% 61.9M 12s\n 58150K .......... .......... .......... .......... .......... 27% 87.4M 12s\n 58200K .......... .......... .......... .......... .......... 27% 58.7M 12s\n 58250K .......... .......... .......... .......... .......... 27% 69.8M 12s\n 58300K .......... .......... .......... .......... .......... 27%  128M 12s\n 58350K .......... .......... .......... .......... .......... 27% 93.8M 12s\n 58400K .......... .......... .......... .......... .......... 27% 81.4M 12s\n 58450K .......... .......... .......... .......... .......... 27%  146M 12s\n 58500K .......... .......... .......... .......... .......... 27%  122M 12s\n 58550K .......... .......... .......... .......... .......... 27%  100M 12s\n 58600K .......... .......... .......... .......... .......... 27% 85.9M 12s\n 58650K .......... .......... .......... .......... .......... 27% 79.1M 12s\n 58700K .......... .......... .......... .......... .......... 27%  106M 12s\n 58750K .......... .......... .......... .......... .......... 27%  217M 12s\n 58800K .......... .......... .......... .......... .......... 28%  276M 12s\n 58850K .......... .......... .......... .......... .......... 28%  259M 12s\n 58900K .......... .......... .......... .......... .......... 28%  174M 12s\n 58950K .......... .......... .......... .......... .......... 28%  220M 12s\n 59000K .......... .......... .......... .......... .......... 28%  239M 12s\n 59050K .......... .......... .......... .......... .......... 28%  264M 12s\n 59100K .......... .......... .......... .......... .......... 28%  258M 12s\n 59150K .......... .......... .......... .......... .......... 28%  222M 12s\n 59200K .......... .......... .......... .......... .......... 28%  278M 12s\n 59250K .......... .......... .......... .......... .......... 28%  251M 12s\n 59300K .......... .......... .......... .......... .......... 28%  261M 12s\n 59350K .......... .......... .......... .......... .......... 28%  749K 12s\n 59400K .......... .......... .......... .......... .......... 28% 77.0M 12s\n 59450K .......... .......... .......... .......... .......... 28% 54.2M 12s\n 59500K .......... .......... .......... .......... .......... 28% 65.6M 12s\n 59550K .......... .......... .......... .......... .......... 28% 82.6M 12s\n 59600K .......... .......... .......... .......... .......... 28% 99.4M 12s\n 59650K .......... .......... .......... .......... .......... 28% 79.4M 12s\n 59700K .......... .......... .......... .......... .......... 28% 84.0M 12s\n 59750K .......... .......... .......... .......... .......... 28% 95.8M 12s\n 59800K .......... .......... .......... .......... .......... 28% 88.7M 12s\n 59850K .......... .......... .......... .......... .......... 28% 71.6M 12s\n 59900K .......... .......... .......... .......... .......... 28% 68.7M 12s\n 59950K .......... .......... .......... .......... .......... 28% 77.2M 12s\n 60000K .......... .......... .......... .......... .......... 28% 91.1M 12s\n 60050K .......... .......... .......... .......... .......... 28% 72.2M 12s\n 60100K .......... .......... .......... .......... .......... 28% 70.8M 12s\n 60150K .......... .......... .......... .......... .......... 28%  111M 12s\n 60200K .......... .......... .......... .......... .......... 28%  105M 12s\n 60250K .......... .......... .......... .......... .......... 28%  162M 12s\n 60300K .......... .......... .......... .......... .......... 28%  108M 12s\n 60350K .......... .......... .......... .......... .......... 28% 95.6M 12s\n 60400K .......... .......... .......... .......... .......... 28%  102M 12s\n 60450K .......... .......... .......... .......... .......... 28% 86.7M 12s\n 60500K .......... .......... .......... .......... .......... 28%  155M 12s\n 60550K .......... .......... .......... .......... .......... 28%  101M 12s\n 60600K .......... .......... .......... .......... .......... 28%  194M 12s\n 60650K .......... .......... .......... .......... .......... 28%  157M 12s\n 60700K .......... .......... .......... .......... .......... 28% 68.7M 11s\n 60750K .......... .......... .......... .......... .......... 28% 88.7M 11s\n 60800K .......... .......... .......... .......... .......... 28% 81.1M 11s\n 60850K .......... .......... .......... .......... .......... 28% 82.6M 11s\n 60900K .......... .......... .......... .......... .......... 29% 81.6M 11s\n 60950K .......... .......... .......... .......... .......... 29% 72.9M 11s\n 61000K .......... .......... .......... .......... .......... 29% 88.2M 11s\n 61050K .......... .......... .......... .......... .......... 29% 68.2M 11s\n 61100K .......... .......... .......... .......... .......... 29% 74.0M 11s\n 61150K .......... .......... .......... .......... .......... 29% 84.5M 11s\n 61200K .......... .......... .......... .......... .......... 29% 95.2M 11s\n 61250K .......... .......... .......... .......... .......... 29% 69.3M 11s\n 61300K .......... .......... .......... .......... .......... 29%  108M 11s\n 61350K .......... .......... .......... .......... .......... 29% 86.4M 11s\n 61400K .......... .......... .......... .......... .......... 29% 78.9M 11s\n 61450K .......... .......... .......... .......... .......... 29% 91.5M 11s\n 61500K .......... .......... .......... .......... .......... 29%  144M 11s\n 61550K .......... .......... .......... .......... .......... 29%  167M 11s\n 61600K .......... .......... .......... .......... .......... 29%  250M 11s\n 61650K .......... .......... .......... .......... .......... 29%  131M 11s\n 61700K .......... .......... .......... .......... .......... 29%  258M 11s\n 61750K .......... .......... .......... .......... .......... 29%  757K 11s\n 61800K .......... .......... .......... .......... .......... 29% 58.2M 11s\n 61850K .......... .......... .......... .......... .......... 29%  126M 11s\n 61900K .......... .......... .......... .......... .......... 29% 78.6M 11s\n 61950K .......... .......... .......... .......... .......... 29% 51.8M 11s\n 62000K .......... .......... .......... .......... .......... 29% 51.5M 11s\n 62050K .......... .......... .......... .......... .......... 29% 55.8M 11s\n 62100K .......... .......... .......... .......... .......... 29% 58.7M 11s\n 62150K .......... .......... .......... .......... .......... 29%  107M 11s\n 62200K .......... .......... .......... .......... .......... 29%  116M 11s\n 62250K .......... .......... .......... .......... .......... 29% 67.9M 11s\n 62300K .......... .......... .......... .......... .......... 29% 80.7M 11s\n 62350K .......... .......... .......... .......... .......... 29% 98.6M 11s\n 62400K .......... .......... .......... .......... .......... 29% 81.3M 11s\n 62450K .......... .......... .......... .......... .......... 29% 76.2M 11s\n 62500K .......... .......... .......... .......... .......... 29% 86.0M 11s\n 62550K .......... .......... .......... .......... .......... 29% 83.8M 11s\n 62600K .......... .......... .......... .......... .......... 29% 93.7M 11s\n 62650K .......... .......... .......... .......... .......... 29% 82.4M 11s\n 62700K .......... .......... .......... .......... .......... 29% 66.7M 11s\n 62750K .......... .......... .......... .......... .......... 29% 69.8M 11s\n 62800K .......... .......... .......... .......... .......... 29% 91.1M 11s\n 62850K .......... .......... .......... .......... .......... 29% 89.1M 11s\n 62900K .......... .......... .......... .......... .......... 29%  103M 11s\n 62950K .......... .......... .......... .......... .......... 29%  154M 11s\n 63000K .......... .......... .......... .......... .......... 30%  117M 11s\n 63050K .......... .......... .......... .......... .......... 30%  154M 11s\n 63100K .......... .......... .......... .......... .......... 30%  174M 11s\n 63150K .......... .......... .......... .......... .......... 30%  128M 11s\n 63200K .......... .......... .......... .......... .......... 30%  135M 11s\n 63250K .......... .......... .......... .......... .......... 30%  113M 11s\n 63300K .......... .......... .......... .......... .......... 30% 83.4M 11s\n 63350K .......... .......... .......... .......... .......... 30% 64.8M 11s\n 63400K .......... .......... .......... .......... .......... 30%  106M 11s\n 63450K .......... .......... .......... .......... .......... 30% 96.7M 11s\n 63500K .......... .......... .......... .......... .......... 30% 78.9M 11s\n 63550K .......... .......... .......... .......... .......... 30% 77.6M 11s\n 63600K .......... .......... .......... .......... .......... 30% 81.0M 11s\n 63650K .......... .......... .......... .......... .......... 30% 87.1M 11s\n 63700K .......... .......... .......... .......... .......... 30% 96.6M 11s\n 63750K .......... .......... .......... .......... .......... 30%  317M 11s\n 63800K .......... .......... .......... .......... .......... 30%  331M 11s\n 63850K .......... .......... .......... .......... .......... 30%  747K 11s\n 63900K .......... .......... .......... .......... .......... 30% 74.6M 11s\n 63950K .......... .......... .......... .......... .......... 30% 52.7M 11s\n 64000K .......... .......... .......... .......... .......... 30% 88.0M 11s\n 64050K .......... .......... .......... .......... .......... 30%  118M 11s\n 64100K .......... .......... .......... .......... .......... 30% 98.1M 11s\n 64150K .......... .......... .......... .......... .......... 30%  190M 11s\n 64200K .......... .......... .......... .......... .......... 30%  223M 11s\n 64250K .......... .......... .......... .......... .......... 30%  181M 11s\n 64300K .......... .......... .......... .......... .......... 30%  179M 11s\n 64350K .......... .......... .......... .......... .......... 30%  187M 11s\n 64400K .......... .......... .......... .......... .......... 30% 88.4M 11s\n 64450K .......... .......... .......... .......... .......... 30% 50.9M 11s\n 64500K .......... .......... .......... .......... .......... 30% 90.4M 11s\n 64550K .......... .......... .......... .......... .......... 30% 79.4M 11s\n 64600K .......... .......... .......... .......... .......... 30% 93.7M 11s\n 64650K .......... .......... .......... .......... .......... 30%  119M 11s\n 64700K .......... .......... .......... .......... .......... 30%  131M 11s\n 64750K .......... .......... .......... .......... .......... 30%  106M 11s\n 64800K .......... .......... .......... .......... .......... 30% 94.7M 11s\n 64850K .......... .......... .......... .......... .......... 30% 95.1M 11s\n 64900K .......... .......... .......... .......... .......... 30%  121M 11s\n 64950K .......... .......... .......... .......... .......... 30%  131M 11s\n 65000K .......... .......... .......... .......... .......... 30%  122M 11s\n 65050K .......... .......... .......... .......... .......... 30%  122M 11s\n 65100K .......... .......... .......... .......... .......... 31%  168M 11s\n 65150K .......... .......... .......... .......... .......... 31%  115M 11s\n 65200K .......... .......... .......... .......... .......... 31%  165M 11s\n 65250K .......... .......... .......... .......... .......... 31%  116M 11s\n 65300K .......... .......... .......... .......... .......... 31%  127M 11s\n 65350K .......... .......... .......... .......... .......... 31% 85.7M 11s\n 65400K .......... .......... .......... .......... .......... 31%  152M 11s\n 65450K .......... .......... .......... .......... .......... 31%  211M 11s\n 65500K .......... .......... .......... .......... .......... 31% 13.8M 11s\n 65550K .......... .......... .......... .......... .......... 31% 81.8M 11s"
          },
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"result-alert alert-warning\" role\u003d\"alert\"\u003e\u003cbutton type\u003d\"button\" class\u003d\"close\" data-dismiss\u003d\"alert\" aria-label\u003d\"Close\"\u003e\u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e\u003c/button\u003e\u003cstrong\u003eOutput is truncated\u003c/strong\u003e to 102400 bytes. Learn more about \u003cstrong\u003eZEPPELIN_INTERPRETER_OUTPUT_LIMIT\u003c/strong\u003e\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587039847609_-1594440154",
      "id": "20200416-122407_1820825261",
      "dateCreated": "2020-04-16 12:24:07.609",
      "dateStarted": "2020-04-16 12:24:18.863",
      "dateFinished": "2020-04-16 12:24:41.675",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nload data to dcefs\n",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 12:25:05.608",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eload data to dcefs\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587039875645_416561962",
      "id": "20200416-122435_372176047",
      "dateCreated": "2020-04-16 12:24:35.645",
      "dateStarted": "2020-04-16 12:25:05.608",
      "dateFinished": "2020-04-16 12:25:05.615",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\n\n#remove existing copies of dataset from HDFS\nhadoop fs -rm -r -f /tmp/airflightsdelays\nhadoop fs -mkdir /tmp/airflightsdelays\n\n#put data into HDFS\nhadoop fs -put /tmp/flights_200*.bz2 /tmp/airflightsdelays/\nhadoop fs -put /tmp/weather_200*.gz /tmp/airflightsdelays/\nhadoop fs -ls -h /tmp/airflightsdelays/\n",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 12:25:16.469",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1587039858850_149173217",
      "id": "20200416-122418_1975970370",
      "dateCreated": "2020-04-16 12:24:18.850",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nDeclare dependencies/libraries\n\nin spark conf (spark interpretor settings) specify maven dependency for joda-time:joda-time:2.9.1\nspark.jars.packages\tjoda-time:joda-time:2.9.1\n\nFor zeppelin 0.9\n%dep\n\nz.reset()\nz.load(\"joda-time:joda-time:2.9.1\")\n\n",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 13:19:09.465",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eDeclare dependencies/libraries\u003c/p\u003e\n\u003cp\u003ein spark conf (spark interpretor settings) specify maven dependency for joda-time:joda-time:2.9.1\u003cbr/\u003espark.jars.packages joda-time:joda-time:2.9.1\u003c/p\u003e\n\u003cp\u003eFor zeppelin 0.9\u003cbr/\u003e%dep\u003c/p\u003e\n\u003cp\u003ez.reset()\u003cbr/\u003ez.load(\u0026ldquo;joda-time:joda-time:2.9.1\u0026rdquo;)\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587039916469_344537130",
      "id": "20200416-122516_419460393",
      "dateCreated": "2020-04-16 12:25:16.469",
      "dateStarted": "2020-04-16 13:19:09.464",
      "dateFinished": "2020-04-16 13:19:12.368",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nData Science with Hadoop - Predicting airline delays - Spark and ML-Lib\nIntroduction\nIn this demo, we demonstrate how to build a predictive model with Hadoop, this time we\u0027ll use Apache Spark and ML-Lib.\n\nWe will show how to use Apache Spark via its Scala API to generate our feature matrix and also use ML-Lib (Spark\u0027s machine learning library) to build and evaluate our classification models.\n\nRecall from part 1 that we are constructing a predictive model for flight delays. Our source dataset resides here, and includes details about flights in the US from the years 1987-2008. We have also enriched the data with weather information, where we find daily temperatures (min/max), wind speed, snow conditions and precipitation.\n\nWe will build a supervised learning model to predict flight delays for flights leaving O\u0027Hare International airport (ORD). We will use the year 2007 data to build the model, and test its validity using data from 2008.\n\nPre-processing with Hadoop and Spark\nApache Spark\u0027s basic data abstraction is that of an RDD (resilient distributed dataset), which is a fault-tolerant collection of elements that can be operated on in parallel across your Hadoop cluster.\n\nSpark\u0027s API (available in Scala, Python or Java) supports a variety of transformations such as map() and flatMap(), filter(), join(), and others to create and manipulate RDDs. For a full description of the API please check the Spark API programming guide.\n\nSimilar to the Scikit-learn demo, in our first iteration we generate the following features for each flight:\n\nmonth: winter months should have more delays than summer months\nday of month: this is likely not a very predictive variable, but let\u0027s keep it in anyway\nday of week: weekend vs. weekday\nhour of the day: later hours tend to have more delays\nDistance: interesting to see if this variable is a good predictor of delay\nDays from nearest holiday: number of days from the nearest US holiday\nWe will use Spark RDDs to perform the same pre-processing, transforming the raw flight delay dataset into the two feature matrices: data_2007 (our training set) and data_2008 (our test set).\n\nThe case class DelayRec that encapsulates a flight delay record represents the feature vector, and its methods do most of the heavy lifting:\n\nto_date() is a helper method to convert year/month/day to a string\ngen_features(row) takes a row of inputs and generates a key/value tuple where the key is the date string (output of to_date) and the value is the feature value. We don\u0027t use the key in this iteraion, but we will use it in the second iteration to join with the weather data.\nthe get_hour() method extracts the 2-digit hour portion of the departure time\nThe days_from_nearest_holiday() method computes the minimum distance (in days) of the provided year/month/date from any holiday in the list holidays.\nWith DelayRec in place, our processing takes on the following steps (in the function prepFlightDelays):\n\nWe read the raw input file with Spark\u0027s SparkContext.textFile method, resulting in an RDD\nEach row is parsed with CSVReader into fields, and populated into a DelayRec object\nWe then perform a sequence of RDD transformations on the input RDD to make sure we only have rows that correspond to flights that did not get cancelled and originated from ORD.\nFinally, we use the gen_features method to generate the final feature vector per row, as a set of doubles.\n",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 12:52:45.770",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eData Science with Hadoop - Predicting airline delays - Spark and ML-Lib\u003cbr/\u003eIntroduction\u003cbr/\u003eIn this demo, we demonstrate how to build a predictive model with Hadoop, this time we\u0026rsquo;ll use Apache Spark and ML-Lib.\u003c/p\u003e\n\u003cp\u003eWe will show how to use Apache Spark via its Scala API to generate our feature matrix and also use ML-Lib (Spark\u0026rsquo;s machine learning library) to build and evaluate our classification models.\u003c/p\u003e\n\u003cp\u003eRecall from part 1 that we are constructing a predictive model for flight delays. Our source dataset resides here, and includes details about flights in the US from the years 1987-2008. We have also enriched the data with weather information, where we find daily temperatures (min/max), wind speed, snow conditions and precipitation.\u003c/p\u003e\n\u003cp\u003eWe will build a supervised learning model to predict flight delays for flights leaving O\u0026rsquo;Hare International airport (ORD). We will use the year 2007 data to build the model, and test its validity using data from 2008.\u003c/p\u003e\n\u003cp\u003ePre-processing with Hadoop and Spark\u003cbr/\u003eApache Spark\u0026rsquo;s basic data abstraction is that of an RDD (resilient distributed dataset), which is a fault-tolerant collection of elements that can be operated on in parallel across your Hadoop cluster.\u003c/p\u003e\n\u003cp\u003eSpark\u0026rsquo;s API (available in Scala, Python or Java) supports a variety of transformations such as map() and flatMap(), filter(), join(), and others to create and manipulate RDDs. For a full description of the API please check the Spark API programming guide.\u003c/p\u003e\n\u003cp\u003eSimilar to the Scikit-learn demo, in our first iteration we generate the following features for each flight:\u003c/p\u003e\n\u003cp\u003emonth: winter months should have more delays than summer months\u003cbr/\u003eday of month: this is likely not a very predictive variable, but let\u0026rsquo;s keep it in anyway\u003cbr/\u003eday of week: weekend vs. weekday\u003cbr/\u003ehour of the day: later hours tend to have more delays\u003cbr/\u003eDistance: interesting to see if this variable is a good predictor of delay\u003cbr/\u003eDays from nearest holiday: number of days from the nearest US holiday\u003cbr/\u003eWe will use Spark RDDs to perform the same pre-processing, transforming the raw flight delay dataset into the two feature matrices: data_2007 (our training set) and data_2008 (our test set).\u003c/p\u003e\n\u003cp\u003eThe case class DelayRec that encapsulates a flight delay record represents the feature vector, and its methods do most of the heavy lifting:\u003c/p\u003e\n\u003cp\u003eto_date() is a helper method to convert year/month/day to a string\u003cbr/\u003egen_features(row) takes a row of inputs and generates a key/value tuple where the key is the date string (output of to_date) and the value is the feature value. We don\u0026rsquo;t use the key in this iteraion, but we will use it in the second iteration to join with the weather data.\u003cbr/\u003ethe get_hour() method extracts the 2-digit hour portion of the departure time\u003cbr/\u003eThe days_from_nearest_holiday() method computes the minimum distance (in days) of the provided year/month/date from any holiday in the list holidays.\u003cbr/\u003eWith DelayRec in place, our processing takes on the following steps (in the function prepFlightDelays):\u003c/p\u003e\n\u003cp\u003eWe read the raw input file with Spark\u0026rsquo;s SparkContext.textFile method, resulting in an RDD\u003cbr/\u003eEach row is parsed with CSVReader into fields, and populated into a DelayRec object\u003cbr/\u003eWe then perform a sequence of RDD transformations on the input RDD to make sure we only have rows that correspond to flights that did not get cancelled and originated from ORD.\u003cbr/\u003eFinally, we use the gen_features method to generate the final feature vector per row, as a set of doubles.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587040867791_930357852",
      "id": "20200416-124107_381789886",
      "dateCreated": "2020-04-16 12:41:07.791",
      "dateStarted": "2020-04-16 12:52:45.821",
      "dateFinished": "2020-04-16 12:52:45.878",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\nimport org.apache.spark.rdd._\nimport scala.collection.JavaConverters._\nimport au.com.bytecode.opencsv.CSVReader\n\nimport java.io._\nimport org.joda.time._\nimport org.joda.time.format._\nimport org.joda.time.format.DateTimeFormat\nimport org.joda.time.DateTime\nimport org.joda.time.Days\n\n\ncase class DelayRec(year: String,\n                    month: String,\n                    dayOfMonth: String,\n                    dayOfWeek: String,\n                    crsDepTime: String,\n                    depDelay: String,\n                    origin: String,\n                    distance: String,\n                    cancelled: String) {\n\n    val holidays \u003d List(\"01/01/2007\", \"01/15/2007\", \"02/19/2007\", \"05/28/2007\", \"06/07/2007\", \"07/04/2007\",\n      \"09/03/2007\", \"10/08/2007\" ,\"11/11/2007\", \"11/22/2007\", \"12/25/2007\",\n      \"01/01/2008\", \"01/21/2008\", \"02/18/2008\", \"05/22/2008\", \"05/26/2008\", \"07/04/2008\",\n      \"09/01/2008\", \"10/13/2008\" ,\"11/11/2008\", \"11/27/2008\", \"12/25/2008\")\n\n    def gen_features: (String, Array[Double]) \u003d {\n      val values \u003d Array(\n        depDelay.toDouble,\n        month.toDouble,\n        dayOfMonth.toDouble,\n        dayOfWeek.toDouble,\n        get_hour(crsDepTime).toDouble,\n        distance.toDouble,\n        days_from_nearest_holiday(year.toInt, month.toInt, dayOfMonth.toInt)\n      )\n      new Tuple2(to_date(year.toInt, month.toInt, dayOfMonth.toInt), values)\n    }\n\n    def get_hour(depTime: String) : String \u003d \"%04d\".format(depTime.toInt).take(2)\n    def to_date(year: Int, month: Int, day: Int) \u003d \"%04d%02d%02d\".format(year, month, day)\n\n    def days_from_nearest_holiday(year:Int, month:Int, day:Int): Int \u003d {\n      val sampleDate \u003d new DateTime(year, month, day, 0, 0)\n\n      holidays.foldLeft(3000) { (r, c) \u003d\u003e\n        val holiday \u003d DateTimeFormat.forPattern(\"MM/dd/yyyy\").parseDateTime(c)\n        val distance \u003d Math.abs(Days.daysBetween(holiday, sampleDate).getDays)\n        math.min(r, distance)\n      }\n    }\n  }\n\n// function to do a preprocessing step for a given file\ndef prepFlightDelays(infile: String): RDD[DelayRec] \u003d {\n    val data \u003d sc.textFile(infile)\n\n    data.map { line \u003d\u003e\n      val reader \u003d new CSVReader(new StringReader(line))\n      reader.readAll().asScala.toList.map(rec \u003d\u003e DelayRec(rec(0),rec(1),rec(2),rec(3),rec(5),rec(15),rec(16),rec(18),rec(21)))\n    }.map(list \u003d\u003e list(0))\n    .filter(rec \u003d\u003e rec.year !\u003d \"Year\")\n    .filter(rec \u003d\u003e rec.cancelled \u003d\u003d \"0\")\n    .filter(rec \u003d\u003e rec.origin \u003d\u003d \"ORD\")\n}\n\nval data_2007tmp \u003d prepFlightDelays(\"/tmp/airflightsdelays/flights_2007.csv.bz2\")\nval data_2007 \u003d data_2007tmp.map(rec \u003d\u003e rec.gen_features._2)\nval data_2008 \u003d prepFlightDelays(\"/tmp/airflightsdelays/flights_2008.csv.bz2\").map(rec \u003d\u003e rec.gen_features._2)\n\ndata_2007tmp.toDF().createOrReplaceTempView(\"data_2007tmp\")\n\ndata_2007.take(5).map(x \u003d\u003e x mkString \",\").foreach(println)\n",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:05:55.678",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import sqlContext.implicits._\nimport org.apache.spark.rdd._\nimport scala.collection.JavaConverters._\nimport au.com.bytecode.opencsv.CSVReader\nimport java.io._\nimport org.joda.time._\nimport org.joda.time.format._\nimport org.joda.time.format.DateTimeFormat\nimport org.joda.time.DateTime\nimport org.joda.time.Days\ndefined class DelayRec\nprepFlightDelays: (infile: String)org.apache.spark.rdd.RDD[DelayRec]\ndata_2007tmp: org.apache.spark.rdd.RDD[DelayRec] \u003d MapPartitionsRDD[22] at filter at \u003cconsole\u003e:99\ndata_2007: org.apache.spark.rdd.RDD[Array[Double]] \u003d MapPartitionsRDD[23] at map at \u003cconsole\u003e:103\ndata_2008: org.apache.spark.rdd.RDD[Array[Double]] \u003d MapPartitionsRDD[31] at map at \u003cconsole\u003e:104\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587041565770_-416193052",
      "id": "20200416-125245_1958851948",
      "dateCreated": "2020-04-16 12:52:45.771",
      "dateStarted": "2020-04-16 14:05:55.846",
      "dateFinished": "2020-04-16 14:06:13.215",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nLets explore data using SQL and visualizations\n",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:07:06.912",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eLets explore data using SQL and visualizations\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587041598151_-1930519993",
      "id": "20200416-125318_1153961617",
      "dateCreated": "2020-04-16 12:53:18.151",
      "dateStarted": "2020-04-16 14:07:06.912",
      "dateFinished": "2020-04-16 14:07:09.865",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\n\nselect dayofWeek, case when depDelay \u003e 15 then \u0027delayed\u0027 else \u0027ok\u0027 end , count(1)\nfrom data_2007tmp \ngroup by dayofweek , case when depDelay \u003e 15 then \u0027delayed\u0027 else \u0027ok\u0027 end ",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:07:44.590",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "dayofWeek": "string",
                      "CASE WHEN (CAST(depDelay AS INT) \u003e 15) THEN delayed ELSE ok END": "string",
                      "count(1)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "dayofWeek\tCASE WHEN (CAST(depDelay AS INT) \u003e 15) THEN delayed ELSE ok END\tcount(1)\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046026790_1840074011",
      "id": "20200416-140706_1299203004",
      "dateCreated": "2020-04-16 14:07:06.790",
      "dateStarted": "2020-04-16 14:07:25.083",
      "dateFinished": "2020-04-16 14:07:43.294",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\n\nselect cast( cast(crsDepTime as int) / 100 as int) as hour,  case when depDelay \u003e 15 then \u0027delayed\u0027 else \u0027ok\u0027 end as delay, count(1) as count\nfrom  data_2007tmp \ngroup by  cast( cast(crsDepTime as int) / 100 as int),  case when depDelay \u003e 15 then \u0027delayed\u0027 else \u0027ok\u0027 end",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:08:06.180",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "hour": "string",
                      "delay": "string",
                      "count": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "hour\tdelay\tcount\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046044982_-136781518",
      "id": "20200416-140724_65169917",
      "dateCreated": "2020-04-16 14:07:24.982",
      "dateStarted": "2020-04-16 14:07:48.268",
      "dateFinished": "2020-04-16 14:08:04.987",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nModeling with Spark and ML-Lib\nWith the data_2007 dataset (which we\u0027ll use for training) and the data_2008 dataset (which we\u0027ll use for validation) as RDDs, we now build a predictive model using Spark\u0027s ML-Lib machine learning library.\n\nML-Lib is Spark’s scalable machine learning library, which includes various learning algorithms and utilities, including classification, regression, clustering, collaborative filtering, dimensionality reduction, and others.\n\nIf you compare ML-Lib to Scikit-learn, at the moment ML-Lib lacks a few important algorithms like Random Forest or Gradient Boosted Trees. Having said that, we see a strong pace of innovation from the ML-Lib community and expect more algorithms and other features to be added soon (for example, Random Forest is being actively worked on, and will likely be available in the next release).\n\nTo use ML-Lib\u0027s machine learning algorithms, first we parse our feature matrices into RDDs of LabeledPoint objects (for both the training and test datasets). LabeledPoint is ML-Lib\u0027s abstraction for a feature vector accompanied by a label. We consider flight delays of 15 minutes or more as “delays” and mark it with a label of 1.0, and under 15 minutes as “non-delay” and mark it with a label of 0.0.\n\nWe also use ML-Lib\u0027s StandardScaler class to normalize our feature values for both training and validation sets. This is important because of ML-Lib\u0027s use of Stochastic Gradient Descent, which is known to perform best if feature vectors are normalized.\n",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:08:13.208",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eModeling with Spark and ML-Lib\u003cbr/\u003eWith the data_2007 dataset (which we\u0026rsquo;ll use for training) and the data_2008 dataset (which we\u0026rsquo;ll use for validation) as RDDs, we now build a predictive model using Spark\u0026rsquo;s ML-Lib machine learning library.\u003c/p\u003e\n\u003cp\u003eML-Lib is Spark’s scalable machine learning library, which includes various learning algorithms and utilities, including classification, regression, clustering, collaborative filtering, dimensionality reduction, and others.\u003c/p\u003e\n\u003cp\u003eIf you compare ML-Lib to Scikit-learn, at the moment ML-Lib lacks a few important algorithms like Random Forest or Gradient Boosted Trees. Having said that, we see a strong pace of innovation from the ML-Lib community and expect more algorithms and other features to be added soon (for example, Random Forest is being actively worked on, and will likely be available in the next release).\u003c/p\u003e\n\u003cp\u003eTo use ML-Lib\u0026rsquo;s machine learning algorithms, first we parse our feature matrices into RDDs of LabeledPoint objects (for both the training and test datasets). LabeledPoint is ML-Lib\u0026rsquo;s abstraction for a feature vector accompanied by a label. We consider flight delays of 15 minutes or more as “delays” and mark it with a label of 1.0, and under 15 minutes as “non-delay” and mark it with a label of 0.0.\u003c/p\u003e\n\u003cp\u003eWe also use ML-Lib\u0026rsquo;s StandardScaler class to normalize our feature values for both training and validation sets. This is important because of ML-Lib\u0026rsquo;s use of Stochastic Gradient Descent, which is known to perform best if feature vectors are normalized.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046068206_675998847",
      "id": "20200416-140748_1813541856",
      "dateCreated": "2020-04-16 14:07:48.206",
      "dateStarted": "2020-04-16 14:08:13.208",
      "dateFinished": "2020-04-16 14:08:13.292",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport org.apache.spark.mllib.linalg.Vectors\nimport org.apache.spark.mllib.feature.StandardScaler\n\ndef parseData(vals: Array[Double]): LabeledPoint \u003d {\n  LabeledPoint(if (vals(0)\u003e\u003d15) 1.0 else 0.0, Vectors.dense(vals.drop(1)))\n}\n\n// Prepare training set\nval parsedTrainData \u003d data_2007.map(parseData)\nparsedTrainData.cache\nval scaler \u003d new StandardScaler(withMean \u003d true, withStd \u003d true).fit(parsedTrainData.map(x \u003d\u003e x.features))\nval scaledTrainData \u003d parsedTrainData.map(x \u003d\u003e LabeledPoint(x.label, scaler.transform(Vectors.dense(x.features.toArray))))\nscaledTrainData.cache\n\n// Prepare test/validation set\nval parsedTestData \u003d data_2008.map(parseData)\nparsedTestData.cache\nval scaledTestData \u003d parsedTestData.map(x \u003d\u003e LabeledPoint(x.label, scaler.transform(Vectors.dense(x.features.toArray))))\nscaledTestData.cache\n\nscaledTrainData.take(3).map(x \u003d\u003e (x.label, x.features)).foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:10:29.501",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "java.lang.IllegalArgumentException: requirement failed: Nothing has been added to this summarizer.\n  at scala.Predef$.require(Predef.scala:224)\n  at org.apache.spark.mllib.stat.MultivariateOnlineSummarizer.variance(MultivariateOnlineSummarizer.scala:204)\n  at org.apache.spark.mllib.feature.StandardScaler.fit(StandardScaler.scala:61)\n  ... 73 elided\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046093150_-546872974",
      "id": "20200416-140813_976930785",
      "dateCreated": "2020-04-16 14:08:13.150",
      "dateStarted": "2020-04-16 14:10:29.562",
      "dateFinished": "2020-04-16 14:10:31.052",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nNote that we use the RDD cache method to ensure that these computed RDDs (parsedTrainData, scaledTrainData, parsedTestData and scaledTestData) are cached in memory by Spark and not re-computed with each iteration of stochastic gradient descent.\n\nWe also the Metrics class for evaluation of classification metrics: precision, recall, accuracy and the F1-measure\n",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:08:52.533",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eNote that we use the RDD cache method to ensure that these computed RDDs (parsedTrainData, scaledTrainData, parsedTestData and scaledTestData) are cached in memory by Spark and not re-computed with each iteration of stochastic gradient descent.\u003c/p\u003e\n\u003cp\u003eWe also the Metrics class for evaluation of classification metrics: precision, recall, accuracy and the F1-measure\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046113819_-620422113",
      "id": "20200416-140833_1393341660",
      "dateCreated": "2020-04-16 14:08:33.820",
      "dateStarted": "2020-04-16 14:08:52.533",
      "dateFinished": "2020-04-16 14:08:52.546",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\n// Function to compute evaluation metrics\ndef eval_metrics(labelsAndPreds: RDD[(Double, Double)]) : Tuple2[Array[Double], Array[Double]] \u003d {\n    val tp \u003d labelsAndPreds.filter(r \u003d\u003e r._1\u003d\u003d1 \u0026\u0026 r._2\u003d\u003d1).count.toDouble\n    val tn \u003d labelsAndPreds.filter(r \u003d\u003e r._1\u003d\u003d0 \u0026\u0026 r._2\u003d\u003d0).count.toDouble\n    val fp \u003d labelsAndPreds.filter(r \u003d\u003e r._1\u003d\u003d1 \u0026\u0026 r._2\u003d\u003d0).count.toDouble\n    val fn \u003d labelsAndPreds.filter(r \u003d\u003e r._1\u003d\u003d0 \u0026\u0026 r._2\u003d\u003d1).count.toDouble\n\n    val precision \u003d tp / (tp+fp)\n    val recall \u003d tp / (tp+fn)\n    val F_measure \u003d 2*precision*recall / (precision+recall)\n    val accuracy \u003d (tp+tn) / (tp+tn+fp+fn)\n    new Tuple2(Array(tp, tn, fp, fn), Array(precision, recall, F_measure, accuracy))\n}\n\nimport org.apache.spark.rdd._\nimport org.apache.spark.rdd.RDD\n\nclass Metrics(labelsAndPreds: RDD[(Double, Double)]) extends java.io.Serializable {\n\n    private def filterCount(lftBnd:Int,rtBnd:Int):Double \u003d labelsAndPreds\n                                                           .map(x \u003d\u003e (x._1.toInt, x._2.toInt))\n                                                           .filter(_ \u003d\u003d (lftBnd,rtBnd)).count()\n\n    lazy val tp \u003d filterCount(1,1)  // true positives\n    lazy val tn \u003d filterCount(0,0)  // true negatives\n    lazy val fp \u003d filterCount(0,1)  // false positives\n    lazy val fn \u003d filterCount(1,0)  // false negatives\n\n    lazy val precision \u003d tp / (tp+fp)\n    lazy val recall \u003d tp / (tp+fn)\n    lazy val F1 \u003d 2*precision*recall / (precision+recall)\n    lazy val accuracy \u003d (tp+tn) / (tp+tn+fp+fn)\n}",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:09:08.359",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "eval_metrics: (labelsAndPreds: org.apache.spark.rdd.RDD[(Double, Double)])(Array[Double], Array[Double])\nimport org.apache.spark.rdd._\nimport org.apache.spark.rdd.RDD\ndefined class Metrics\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046132460_-346818772",
      "id": "20200416-140852_1310407650",
      "dateCreated": "2020-04-16 14:08:52.460",
      "dateStarted": "2020-04-16 14:09:08.443",
      "dateFinished": "2020-04-16 14:09:08.798",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nML-Lib supports a few algorithms for supervised learning, among those are Linear Regression and Logistic Regression, Naive Bayes, Decision Tree, SVM, Random Forest and Gradient Boosted Trees. We will demonstrate the use of Logistic Regression, Decision Tree and Random Forest.\n\nLet\u0027s see how to build these models with ML-Lib:",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:09:25.202",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eML-Lib supports a few algorithms for supervised learning, among those are Linear Regression and Logistic Regression, Naive Bayes, Decision Tree, SVM, Random Forest and Gradient Boosted Trees. We will demonstrate the use of Logistic Regression, Decision Tree and Random Forest.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s see how to build these models with ML-Lib:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046148360_588622403",
      "id": "20200416-140908_1230264462",
      "dateCreated": "2020-04-16 14:09:08.360",
      "dateStarted": "2020-04-16 14:09:25.204",
      "dateFinished": "2020-04-16 14:09:25.218",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark \n\nimport org.apache.spark.mllib.classification.LogisticRegressionWithSGD\n\n// Build the Logistic Regression model\nval model_lr \u003d LogisticRegressionWithSGD.train(scaledTrainData, numIterations\u003d100)\n\n// Predict\nval labelsAndPreds_lr \u003d scaledTestData.map { point \u003d\u003e\n    val pred \u003d model_lr.predict(point.features)\n    (pred, point.label)\n}\nval m_lr \u003d eval_metrics(labelsAndPreds_lr)._2\nprintln(\"precision \u003d %.2f, recall \u003d %.2f, F1 \u003d %.2f, accuracy \u003d %.2f\".format(m_lr(0), m_lr(1), m_lr(2), m_lr(3)))\n",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:09:45.759",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:78: error: not found: value scaledTrainData\n       val model_lr \u003d LogisticRegressionWithSGD.train(scaledTrainData, numIterations\u003d100)\n                                                      ^\n\u003cconsole\u003e:81: error: not found: value scaledTestData\n       val labelsAndPreds_lr \u003d scaledTestData.map { point \u003d\u003e\n                               ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046165139_169947894",
      "id": "20200416-140925_1282143860",
      "dateCreated": "2020-04-16 14:09:25.139",
      "dateStarted": "2020-04-16 14:09:45.840",
      "dateFinished": "2020-04-16 14:09:45.950",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nLet\u0027s inspect the feature weights from this model:\n",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:10:57.715",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eLet\u0026rsquo;s inspect the feature weights from this model:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046185760_-1155606313",
      "id": "20200416-140945_1552302837",
      "dateCreated": "2020-04-16 14:09:45.760",
      "dateStarted": "2020-04-16 14:10:57.715",
      "dateFinished": "2020-04-16 14:10:57.724",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "println(model_lr.weights)",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:11:16.950",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:74: error: not found: value model_lr\n       println(model_lr.weights)\n               ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046257629_288699412",
      "id": "20200416-141057_211109536",
      "dateCreated": "2020-04-16 14:10:57.629",
      "dateStarted": "2020-04-16 14:11:17.019",
      "dateFinished": "2020-04-16 14:11:17.090",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nLet\u0027s inspect the feature weights from this model:",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:11:37.730",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eLet\u0026rsquo;s inspect the feature weights from this model:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046276950_-1401366004",
      "id": "20200416-141116_1832536247",
      "dateCreated": "2020-04-16 14:11:16.950",
      "dateStarted": "2020-04-16 14:11:37.730",
      "dateFinished": "2020-04-16 14:11:37.742",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nWe have built a model using Logistic Regression with SGD using 100 iterations, and then used it to predict flight delays over the validation set to measure performance: precision, recall, F1 and accuracy.\n\nNext, let\u0027s try the Support Vector Machine:",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:11:50.540",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eWe have built a model using Logistic Regression with SGD using 100 iterations, and then used it to predict flight delays over the validation set to measure performance: precision, recall, F1 and accuracy.\u003c/p\u003e\n\u003cp\u003eNext, let\u0026rsquo;s try the Support Vector Machine:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046297650_1894766026",
      "id": "20200416-141137_782875973",
      "dateCreated": "2020-04-16 14:11:37.650",
      "dateStarted": "2020-04-16 14:11:50.587",
      "dateFinished": "2020-04-16 14:11:50.598",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\nimport org.apache.spark.mllib.classification.SVMWithSGD\n\n// Build the SVM model\nval svmAlg \u003d new SVMWithSGD()\nsvmAlg.optimizer.setNumIterations(100)\n                .setRegParam(1.0)\n                .setStepSize(1.0)\nval model_svm \u003d svmAlg.run(scaledTrainData)\n\n// Predict\nval labelsAndPreds_svm \u003d scaledTestData.map { point \u003d\u003e\n        val pred \u003d model_svm.predict(point.features)\n        (pred, point.label)\n}\nval m_svm \u003d eval_metrics(labelsAndPreds_svm)._2\nprintln(\"precision \u003d %.2f, recall \u003d %.2f, F1 \u003d %.2f, accuracy \u003d %.2f\".format(m_svm(0), m_svm(1), m_svm(2), m_svm(3)))",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:12:06.899",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:82: error: not found: value scaledTrainData\n       val model_svm \u003d svmAlg.run(scaledTrainData)\n                                  ^\n\u003cconsole\u003e:85: error: not found: value scaledTestData\n       val labelsAndPreds_svm \u003d scaledTestData.map { point \u003d\u003e\n                                ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046310540_-15898031",
      "id": "20200416-141150_1819255675",
      "dateCreated": "2020-04-16 14:11:50.540",
      "dateStarted": "2020-04-16 14:12:06.976",
      "dateFinished": "2020-04-16 14:12:07.068",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nNext, let\u0027s try a Decision Tree model:",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 14:12:21.562",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eNext, let\u0026rsquo;s try a Decision Tree model:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046326900_-4974505",
      "id": "20200416-141206_1341860643",
      "dateCreated": "2020-04-16 14:12:06.900",
      "dateStarted": "2020-04-16 14:12:21.564",
      "dateFinished": "2020-04-16 14:12:21.572",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\nimport org.apache.spark.mllib.tree.DecisionTree\n\n// Build the Decision Tree model\nval numClasses \u003d 2\nval categoricalFeaturesInfo \u003d Map[Int, Int]()\nval impurity \u003d \"gini\"\nval maxDepth \u003d 10\nval maxBins \u003d 100\nval model_dt \u003d DecisionTree.trainClassifier(parsedTrainData, numClasses, categoricalFeaturesInfo, impurity, maxDepth, maxBins)\n\n// Predict\nval labelsAndPreds_dt \u003d parsedTestData.map { point \u003d\u003e\n    val pred \u003d model_dt.predict(point.features)\n    (point.label, pred)\n}\nval m_dt \u003d new Metrics(labelsAndPreds_dt)\nprintln(\"precision \u003d %.2f, recall \u003d %.2f, F1 \u003d %.2f, accuracy \u003d %.2f\"\n        .format(m_dt.precision, m_dt.recall, m_dt.F1, m_dt.accuracy))\n",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 15:27:36.526",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:31: error: not found: value parsedTrainData\n       val model_dt \u003d DecisionTree.trainClassifier(parsedTrainData, numClasses, categoricalFeaturesInfo, impurity, maxDepth, maxBins)\n                                                   ^\n\u003cconsole\u003e:34: error: not found: value parsedTestData\n       val labelsAndPreds_dt \u003d parsedTestData.map { point \u003d\u003e\n                               ^\n\u003cconsole\u003e:38: error: not found: type Metrics\n       val m_dt \u003d new Metrics(labelsAndPreds_dt)\n                      ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587046341499_129242998",
      "id": "20200416-141221_1158080916",
      "dateCreated": "2020-04-16 14:12:21.500",
      "dateStarted": "2020-04-16 15:27:36.736",
      "dateFinished": "2020-04-16 15:29:26.046",
      "status": "ABORT",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nAnd finally, let\u0027s try the Random Forest model:",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 15:32:02.627",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAnd finally, let\u0026rsquo;s try the Random Forest model:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587050856530_-1441545987",
      "id": "20200416-152736_722925990",
      "dateCreated": "2020-04-16 15:27:36.530",
      "dateStarted": "2020-04-16 15:32:02.630",
      "dateFinished": "2020-04-16 15:32:05.551",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\nimport org.apache.spark.mllib.tree.RandomForest\nimport org.apache.spark.mllib.tree.configuration.Strategy\n\nval treeStrategy \u003d Strategy.defaultStrategy(\"Classification\")\nval model_rf \u003d RandomForest.trainClassifier(parsedTrainData, treeStrategy, \n                                            numTrees \u003d 100, featureSubsetStrategy \u003d \"auto\", seed \u003d 125)\n\n// Predict\nval labelsAndPreds_rf \u003d parsedTestData.map { point \u003d\u003e\n    val pred \u003d model_rf.predict(point.features)\n    (point.label, pred)\n}\nval m_rf \u003d new Metrics(labelsAndPreds_rf)\nprintln(\"precision \u003d %.2f, recall \u003d %.2f, F1 \u003d %.2f, accuracy \u003d %.2f\"\n        .format(m_rf.precision, m_rf.recall, m_rf.F1, m_rf.accuracy))",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 15:32:05.001",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:27: error: not found: value parsedTrainData\n       val model_rf \u003d RandomForest.trainClassifier(parsedTrainData, treeStrategy,\n                                                   ^\n\u003cconsole\u003e:31: error: not found: value parsedTestData\n       val labelsAndPreds_rf \u003d parsedTestData.map { point \u003d\u003e\n                               ^\n\u003cconsole\u003e:35: error: not found: type Metrics\n       val m_rf \u003d new Metrics(labelsAndPreds_rf)\n                      ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587050965852_917165299",
      "id": "20200416-152925_1537660841",
      "dateCreated": "2020-04-16 15:29:25.852",
      "dateStarted": "2020-04-16 15:32:05.088",
      "dateFinished": "2020-04-16 15:32:05.187",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nAs expected, the improved feature set increased the accuracy of our model for both SVM and Decision Tree models.",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 15:32:07.941",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAs expected, the improved feature set increased the accuracy of our model for both SVM and Decision Tree models.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587050955200_2010188697",
      "id": "20200416-152915_2130162375",
      "dateCreated": "2020-04-16 15:29:15.200",
      "dateStarted": "2020-04-16 15:32:07.942",
      "dateFinished": "2020-04-16 15:32:07.968",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nSummary\nIn this IPython notebook we have demonstrated how to build a predictive model in Scala with Apache Hadoop, Apache Spark and its machine learning library: ML-Lib.\n\nWe have used Apache Spark on our HDP cluster to perform various types of data pre-processing and feature engineering tasks. We then applied a few ML-Lib machine learning algorithms such as support vector machines and decision tree to the resulting datasets and showed how through iterations we continuously add new and improved features resulting in better model performance.",
      "user": "anonymous",
      "dateUpdated": "2020-04-16 15:32:09.918",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eSummary\u003cbr/\u003eIn this IPython notebook we have demonstrated how to build a predictive model in Scala with Apache Hadoop, Apache Spark and its machine learning library: ML-Lib.\u003c/p\u003e\n\u003cp\u003eWe have used Apache Spark on our HDP cluster to perform various types of data pre-processing and feature engineering tasks. We then applied a few ML-Lib machine learning algorithms such as support vector machines and decision tree to the resulting datasets and showed how through iterations we continuously add new and improved features resulting in better model performance.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1587050955005_202030383",
      "id": "20200416-152915_1181988752",
      "dateCreated": "2020-04-16 15:29:15.006",
      "dateStarted": "2020-04-16 15:32:09.919",
      "dateFinished": "2020-04-16 15:32:09.950",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "demo-notebooks/Predicting Airline Delays",
  "id": "2F6S8N3CE",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "sh:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}